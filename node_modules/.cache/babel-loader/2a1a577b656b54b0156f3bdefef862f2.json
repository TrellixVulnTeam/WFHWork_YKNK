{"ast":null,"code":"import _toConsumableArray from\"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import{createStore,applyMiddleware}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import{persistStore,persistReducer}from'redux-persist';import createSagaMiddleware from'redux-saga';import rootReducer from'./rootReducers';import rootSaga from'./rootSaga';import storage from'redux-persist/lib/storage';var IS_PRODUCTION=process.env.NODE_ENV==='production';var bindMiddleware=function bindMiddleware(middleware){if(!IS_PRODUCTION){return composeWithDevTools(applyMiddleware.apply(void 0,_toConsumableArray(middleware)));}return applyMiddleware.apply(void 0,_toConsumableArray(middleware));};var persistConfig={key:'auth',storage:storage,whitelist:['auth']// which reducer want to store\n};var pReducer=persistReducer(persistConfig,rootReducer);var initialState={};var sagaMiddleware=createSagaMiddleware();var middleWares=[sagaMiddleware];var store=createStore(pReducer,initialState,bindMiddleware([].concat(middleWares)));var persistor=persistStore(store);sagaMiddleware.run(rootSaga);export{persistor,store};","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","persistStore","persistReducer","createSagaMiddleware","rootReducer","rootSaga","storage","IS_PRODUCTION","process","env","NODE_ENV","bindMiddleware","middleware","persistConfig","key","whitelist","pReducer","initialState","sagaMiddleware","middleWares","store","persistor","run"],"mappings":"wJAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA/C,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CACtC,GAAI,CAACL,aAAL,CAAoB,CACnB,MAAOP,CAAAA,mBAAmB,CAACD,eAAe,MAAf,2BAAmBa,UAAnB,EAAD,CAA1B,CACA,CAED,MAAOb,CAAAA,eAAe,MAAf,2BAAmBa,UAAnB,EAAP,CACA,CAND,CAQA,GAAMC,CAAAA,aAAa,CAAG,CACrBC,GAAG,CAAE,MADgB,CAErBR,OAAO,CAAEA,OAFY,CAGrBS,SAAS,CAAE,CAAC,MAAD,CAAS;AAHC,CAAtB,CAKA,GAAMC,CAAAA,QAAQ,CAAGd,cAAc,CAACW,aAAD,CAAgBT,WAAhB,CAA/B,CAEA,GAAMa,CAAAA,YAAY,CAAG,EAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGf,oBAAoB,EAA3C,CACA,GAAMgB,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAME,CAAAA,KAAK,CAAGtB,WAAW,CAACkB,QAAD,CAAWC,YAAX,CAAyBN,cAAc,WAAKQ,WAAL,EAAvC,CAAzB,CACA,GAAME,CAAAA,SAAS,CAAGpB,YAAY,CAACmB,KAAD,CAA9B,CACAF,cAAc,CAACI,GAAf,CAAmBjB,QAAnB,EAEA,OAASgB,SAAT,CAAoBD,KAApB","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './rootReducers';\r\nimport rootSaga from './rootSaga';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production';\r\n\r\nconst bindMiddleware = (middleware) => {\r\n\tif (!IS_PRODUCTION) {\r\n\t\treturn composeWithDevTools(applyMiddleware(...middleware));\r\n\t}\r\n\r\n\treturn applyMiddleware(...middleware);\r\n};\r\n\r\nconst persistConfig = {\r\n\tkey: 'auth',\r\n\tstorage: storage,\r\n\twhitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst initialState = {};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\n\r\nconst store = createStore(pReducer, initialState, bindMiddleware([...middleWares]));\r\nconst persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { persistor, store };\r\n"]},"metadata":{},"sourceType":"module"}