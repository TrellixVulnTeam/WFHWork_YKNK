{"ast":null,"code":"import { put, call, takeLatest } from \"redux-saga/effects\";\nimport * as types from \"./types\";\nimport * as api from \"./services\";\nimport { setLocalStorageAccessToken } from \"../../utilities/hooks/auth/util\";\n\nfunction* generateAccessToken_Saga(action) {\n  try {\n    const d = new Date();\n    const time = d.getTime();\n    const code = Math.floor(1000 + Math.random() * 9000);\n    const deviceid = code + \"-\" + time;\n    const body = {\n      api_key: \"tepatredie005007\",\n      device_id: deviceid,\n      device_type: 3,\n      role: \"user\"\n    };\n    const result = yield call(api.generateAccessToken_Service, body);\n    yield put({\n      type: types.GENERATE_ACCESS_TOKEN_SUCCESS,\n      payload: { ...body,\n        access_token: result.data.data.token\n      }\n    }); //setAccessToken(result.data.data.token);\n\n    yield put({\n      type: types.GENERATE_ACCESS_TOKEN_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GENERATE_ACCESS_TOKEN_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* updateAccessToken_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.updateAccessToken_Service, userInfo);\n    yield put({\n      type: types.UPDATE_ACCESS_TOKEN_SUCCESS,\n      payload: userInfo\n    }); //setAccessToken(userInfo.access_token);\n\n    yield put({\n      type: types.UPDATE_ACCESS_TOKEN_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.UPDATE_ACCESS_TOKEN_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* otpRegister_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.otpRegister_Service, action.payload, userInfo);\n    yield put({\n      type: types.OPT_REGISTER_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.OPT_REGISTER_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.OPT_REGISTER_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* verify_otp_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.verify_otp_Service, action.payload, userInfo);\n\n    const setLoginInfo = () => {\n      if (result.data.data.success === 1) {\n        const setloginInfo = { ...result.data.data.data,\n          access_token: userInfo.access_token,\n          device_id: userInfo.device_id,\n          api_key: userInfo.api_key,\n          device_type: userInfo.device_type,\n          email: result.data.data.data.email,\n          fullname: result.data.data.data.full_name,\n          mobile: result.data.data.data.mobile,\n          profile_pic: result.data.data.data.profile_pic,\n          role: result.data.data.data.access,\n          uid: result.data.data.data.id,\n          message: result.data.data.message\n        };\n        return setloginInfo;\n      } else {\n        const setloginInfo = {\n          access_token: userInfo.access_token,\n          device_id: userInfo.device_id,\n          api_key: userInfo.api_key,\n          device_type: userInfo.device_type,\n          message: result.data.data.message\n        };\n        return setloginInfo;\n      }\n    };\n\n    yield put({\n      type: types.VERIFY_OTP_SUCCESS,\n      payload: setLoginInfo()\n    });\n    yield put({\n      type: types.VERIFY_OTP_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.VERIFY_OTP_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* otpLogin_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.otpLogin_Service, action.payload, userInfo);\n    yield put({\n      type: types.OTP_LOGIN_SUCCESS,\n      payload: result.data.data\n    });\n    yield put({\n      type: types.OTP_LOGIN_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.OTP_LOGIN_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* facebookLogin_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.facebookLogin_Service, action.payload, userInfo);\n\n    const setFBLoginInfo = () => {\n      if (result.data.data.success === 1) {\n        const setloginInfo = {\n          access_token: userInfo.access_token,\n          device_id: userInfo.device_id,\n          api_key: userInfo.api_key,\n          device_type: userInfo.device_type,\n          email: result.data.data.data.email,\n          fullname: result.data.data.data.full_name,\n          mobile: result.data.data.data.mobile,\n          profile_pic: result.data.data.data.profile_pic,\n          role: result.data.data.data.access,\n          uid: result.data.data.data.id,\n          message: result.data.data.message\n        };\n        return setloginInfo;\n      } else {\n        const setloginInfo = {\n          access_token: userInfo.access_token,\n          device_id: userInfo.device_id,\n          api_key: userInfo.api_key,\n          device_type: userInfo.device_type,\n          message: result.data.data.message\n        };\n        return setloginInfo;\n      }\n    };\n\n    yield put({\n      type: types.FACEBOOK_LOGIN_SUCCESS,\n      payload: setFBLoginInfo()\n    });\n    yield put({\n      type: types.FACEBOOK_LOGIN_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.FACEBOOK_LOGIN_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* otp_Reset_Signup_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Reset_Signup_otp_Service, action.payload, userInfo);\n    yield put({\n      type: types.RESET_SIGNUP_OTP_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.RESET_SIGNUP_OTP_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.RESET_SIGNUP_OTP_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* otp_Reset_Login_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Reset_Login_otp_Service, action.payload, userInfo);\n    yield put({\n      type: types.RESET_LOGIN_OTP_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.RESET_LOGIN_OTP_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.RESET_LOGIN_OTP_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* update_Profile_Verification_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.User_Profile_Update_Service, action.payload, userInfo); // console.log(result, \"from saga updatesss\");\n\n    yield put({\n      type: types.UPDATE_PROFILE_VERIFICATION_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.UPDATE_PROFILE_VERIFICATION_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.UPDATE_PROFILE_VERIFICATION_FAILURE,\n      payload: error\n    });\n  }\n} //get user profile\n\n\nfunction* get_Profile_Information_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_User_Information_Service, userInfo);\n    yield put({\n      type: types.GET_PROFILE_INFORMATION_SUCCESS,\n      payload: result.data.data\n    });\n    yield put({\n      type: types.GET_PROFILE_INFORMATION_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_PROFILE_INFORMATION_FAILURE,\n      payload: error\n    });\n  }\n} //profile steps\n\n\nfunction* Profile_steps_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Profile_steps_Service, userInfo);\n    yield put({\n      type: types.PROFILE_STEPS_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.PROFILE_STEPS_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.PROFILE_STEPS_FAILURE,\n      payload: error\n    });\n  }\n} //provider register\n\n\n_c = Profile_steps_Saga;\n\nfunction* Provider_Register_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Profile_Provider_Register_Service, action.payload, userInfo);\n    yield put({\n      type: types.PROFILE_PROVIDER_REGISTER_SUCCESS,\n      payload: result.data.data.data\n    });\n    yield put({\n      type: types.PROFILE_PROVIDER_REGISTER_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.PROFILE_PROVIDER_REGISTER_FAILURE,\n      payload: error\n    });\n  }\n} // pop 3\n\n\n_c2 = Provider_Register_Saga;\n\nfunction* Provider_Assign_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Provider_Service_Assign_Service, action.payload, userInfo);\n    yield put({\n      type: types.PROVIDER_ASSIGN_POP3_SUCCESS,\n      payload: result.data.data\n    });\n    yield put({\n      type: types.PROVIDER_ASSIGN_POP3_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.PROVIDER_ASSIGN_POP3_FAILURE,\n      payload: error\n    });\n  }\n} //get serivce list\n\n\n_c3 = Provider_Assign_Saga;\n\nfunction* Get_Service_List_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_List_Serivce, action.payload, userInfo);\n    yield put({\n      type: types.GET_SERVICE_LIST_SUCCESS,\n      payload: result.data.data\n    });\n    yield put({\n      type: types.GET_SERVICE_LIST_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_SERVICE_LIST_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c4 = Get_Service_List_Saga;\n\nfunction* Get_Business_details_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_Provider_Business_details_Service, userInfo); // console.log(result.data.data, \"Get_Business_details_Saga\");\n\n    yield put({\n      type: types.GET_BUSINESSS_DETAILS_SUCCESS,\n      payload: result.data.data\n    });\n    yield put({\n      type: types.GET_BUSINESSS_DETAILS_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_BUSINESSS_DETAILS_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c5 = Get_Business_details_Saga;\n\nfunction* Get_Business_Update_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Business_details_Update_Service, action.payload, userInfo);\n    yield put({\n      type: types.BUSINESSS_DETAILS_UPDATE_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.BUSINESSS_DETAILS_UPDATE_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.BUSINESSS_DETAILS_UPDATE_FAILURE,\n      payload: error\n    });\n  }\n} //provider image gallary list\n\n\n_c6 = Get_Business_Update_Saga;\n\nfunction* Get_Image_Gallary_List_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_Gallary_List_Service, userInfo);\n    yield put({\n      type: types.PROVIDER_GALLARY_LIST_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.PROVIDER_GALLARY_LIST_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.PROVIDER_GALLARY_LIST_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c7 = Get_Image_Gallary_List_Saga;\n\nfunction* Image_Gallary_Delete_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Gallary_Delete_Service, action.payload, userInfo);\n    yield put({\n      type: types.PROVIDER_GALLARY_DELETE_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.PROVIDER_GALLARY_DELETE_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.PROVIDER_GALLARY_DELETE_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c8 = Image_Gallary_Delete_Saga;\n\nfunction* Image_Upload_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Image_Upload_Serivce, action.payload, userInfo);\n    yield put({\n      type: types.IMAGE_UPLOAD_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.IMAGE_UPLOAD_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.IMAGE_UPLOAD_FAILURE,\n      payload: error\n    });\n  }\n} //user address\n\n\n_c9 = Image_Upload_Saga;\n\nfunction* Get_user_Address_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_User_address_Serivce, userInfo);\n    yield put({\n      type: types.GET_USER_ADDRESS_SUCCESS,\n      payload: result.data.data.data\n    });\n    yield put({\n      type: types.GET_USER_ADDRESS_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_USER_ADDRESS_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c10 = Get_user_Address_Saga;\n\nfunction* Get_Provider_Address_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.Get_Provider_address_Serivce, action.payload, userInfo);\n    yield put({\n      type: types.GET_PROVIDER_ADDRESS_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.GET_PROVIDER_ADDRESS_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_PROVIDER_ADDRESS_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c11 = Get_Provider_Address_Saga;\n\nfunction* Signup_User_Name_Enter_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.User_Enter_Name_Serivce, action.payload, userInfo);\n    yield put({\n      type: types.SIGNUP_USER_ENTER_NAME_SUCCESS,\n      payload: result.data.data.data\n    });\n    yield put({\n      type: types.SIGNUP_USER_ENTER_NAME_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.SIGNUP_USER_ENTER_NAME_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c12 = Signup_User_Name_Enter_Saga;\n\nfunction* Signup_User_Completion_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.User_Update_Profile_Serivce, action.payload, userInfo);\n    yield put({\n      type: types.SIGNUP_USER_COMPLETION_SUCCESS,\n      payload: result.data.data.message\n    });\n    yield put({\n      type: types.SIGNUP_USER_COMPLETION_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.SIGNUP_USER_COMPLETION_FAILURE,\n      payload: error\n    });\n  }\n}\n\n_c13 = Signup_User_Completion_Saga;\n\nfunction* logout_user_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.User_logout_Serivce, userInfo);\n    yield put({\n      type: types.LOGOUT__SUCCESS,\n      payload: true\n    });\n    yield put({\n      type: types.LOGOUT__RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.LOGOUT__FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* getCountryList_Saga() {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.getCountryList_Service, userInfo);\n    yield put({\n      type: types.GET_COUNTRY_LIST_SUCCESS,\n      payload: true\n    });\n    yield put({\n      type: types.GET_COUNTRY_LIST_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_COUNTRY_LIST_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* submit_tradie_for_approval(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.tradie_approval_submit, action.payload, userInfo);\n    yield put({\n      type: types.SUBMIT_FOR_APPROVAL_SUCCESS,\n      payload: result\n    });\n    yield put({\n      type: types.SUBMIT_FOR_APPROVAL_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.SUBMIT_FOR_APPROVAL_FAILURE,\n      payload: error\n    });\n  }\n}\n\nfunction* upload_user_Profile_picture_Saga(action) {\n  try {\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n    const result = yield call(api.upload_user_Profile_picture_Serivce, action.payload, userInfo);\n\n    if (result.success === 1) {\n      const setloginInfo = {\n        access_token: userInfo.access_token,\n        device_id: userInfo.device_id,\n        api_key: userInfo.api_key,\n        device_type: userInfo.device_type,\n        email: userInfo.email,\n        fullname: userInfo.full_name,\n        mobile: userInfo.mobile,\n        profile_pic: result.image_url,\n        role: userInfo.access,\n        uid: userInfo.id,\n        message: result.message\n      };\n      setLocalStorageAccessToken(setloginInfo);\n    }\n\n    yield put({\n      type: types.UPLOAD_USER_PROFILE_PICTURE_SUCCESS,\n      payload: result.image_url\n    });\n    yield put({\n      type: types.UPLOAD_USER_PROFILE_PICTURE_RESET\n    });\n  } catch (error) {\n    yield put({\n      type: types.UPLOAD_USER_PROFILE_PICTURE_FAILURE,\n      payload: error\n    });\n  }\n}\n\nexport function* authWatcher() {\n  yield takeLatest(types.GENERATE_ACCESS_TOKEN_REQUEST, generateAccessToken_Saga);\n  yield takeLatest(types.UPDATE_ACCESS_TOKEN_REQUEST, updateAccessToken_Saga);\n  yield takeLatest(types.OPT_REGISTER_REQUEST, otpRegister_Saga);\n  yield takeLatest(types.OTP_LOGIN_REQUEST, otpLogin_Saga);\n  yield takeLatest(types.FACEBOOK_LOGIN_REQUEST, facebookLogin_Saga);\n  yield takeLatest(types.VERIFY_OTP_REQUEST, verify_otp_Saga);\n  yield takeLatest(types.RESET_SIGNUP_OTP_REQUEST, otp_Reset_Signup_Saga);\n  yield takeLatest(types.RESET_LOGIN_OTP_REQUEST, otp_Reset_Login_Saga);\n  yield takeLatest(types.UPDATE_PROFILE_VERIFICATION_REQUEST, update_Profile_Verification_Saga);\n  yield takeLatest(types.GET_PROFILE_INFORMATION_REQUEST, get_Profile_Information_Saga);\n  yield takeLatest(types.PROFILE_STEPS_REQUEST, Profile_steps_Saga);\n  yield takeLatest(types.PROFILE_PROVIDER_REGISTER_REQUEST, Provider_Register_Saga);\n  yield takeLatest(types.GET_BUSINESSS_DETAILS_REQUEST, Get_Business_details_Saga);\n  yield takeLatest(types.BUSINESSS_DETAILS_UPDATE_REQUEST, Get_Business_Update_Saga);\n  yield takeLatest(types.PROVIDER_GALLARY_LIST_REQUEST, Get_Image_Gallary_List_Saga);\n  yield takeLatest(types.PROVIDER_GALLARY_DELETE_REQUEST, Image_Gallary_Delete_Saga);\n  yield takeLatest(types.IMAGE_UPLOAD_REQUEST, Image_Upload_Saga);\n  yield takeLatest(types.GET_SERVICE_LIST_REQUEST, Get_Service_List_Saga);\n  yield takeLatest(types.GET_USER_ADDRESS_REQUEST, Get_user_Address_Saga);\n  yield takeLatest(types.GET_PROVIDER_ADDRESS_REQUEST, Get_Provider_Address_Saga);\n  yield takeLatest(types.PROVIDER_ASSIGN_POP3_REQUEST, Provider_Assign_Saga);\n  yield takeLatest(types.SIGNUP_USER_ENTER_NAME_REQUEST, Signup_User_Name_Enter_Saga);\n  yield takeLatest(types.SIGNUP_USER_COMPLETION_REQUEST, Signup_User_Completion_Saga);\n  yield takeLatest(types.LOGOUT__REQUEST, logout_user_Saga);\n  yield takeLatest(types.GET_COUNTRY_LIST_REQUEST, getCountryList_Saga);\n  yield takeLatest(types.UPLOAD_USER_PROFILE_PICTURE_REQUEST, upload_user_Profile_picture_Saga);\n  yield takeLatest(types.SUBMIT_FOR_APPROVAL, submit_tradie_for_approval);\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Profile_steps_Saga\");\n$RefreshReg$(_c2, \"Provider_Register_Saga\");\n$RefreshReg$(_c3, \"Provider_Assign_Saga\");\n$RefreshReg$(_c4, \"Get_Service_List_Saga\");\n$RefreshReg$(_c5, \"Get_Business_details_Saga\");\n$RefreshReg$(_c6, \"Get_Business_Update_Saga\");\n$RefreshReg$(_c7, \"Get_Image_Gallary_List_Saga\");\n$RefreshReg$(_c8, \"Image_Gallary_Delete_Saga\");\n$RefreshReg$(_c9, \"Image_Upload_Saga\");\n$RefreshReg$(_c10, \"Get_user_Address_Saga\");\n$RefreshReg$(_c11, \"Get_Provider_Address_Saga\");\n$RefreshReg$(_c12, \"Signup_User_Name_Enter_Saga\");\n$RefreshReg$(_c13, \"Signup_User_Completion_Saga\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/redux/auth/sagas.js"],"names":["put","call","takeLatest","types","api","setLocalStorageAccessToken","generateAccessToken_Saga","action","d","Date","time","getTime","code","Math","floor","random","deviceid","body","api_key","device_id","device_type","role","result","generateAccessToken_Service","type","GENERATE_ACCESS_TOKEN_SUCCESS","payload","access_token","data","token","GENERATE_ACCESS_TOKEN_RESET","error","GENERATE_ACCESS_TOKEN_FAILURE","updateAccessToken_Saga","userInfo","JSON","parse","localStorage","getItem","updateAccessToken_Service","UPDATE_ACCESS_TOKEN_SUCCESS","UPDATE_ACCESS_TOKEN_RESET","UPDATE_ACCESS_TOKEN_FAILURE","otpRegister_Saga","otpRegister_Service","OPT_REGISTER_SUCCESS","message","OPT_REGISTER_RESET","OPT_REGISTER_FAILURE","verify_otp_Saga","verify_otp_Service","setLoginInfo","success","setloginInfo","email","fullname","full_name","mobile","profile_pic","access","uid","id","VERIFY_OTP_SUCCESS","VERIFY_OTP_RESET","VERIFY_OTP_FAILURE","otpLogin_Saga","otpLogin_Service","OTP_LOGIN_SUCCESS","OTP_LOGIN_RESET","OTP_LOGIN_FAILURE","facebookLogin_Saga","facebookLogin_Service","setFBLoginInfo","FACEBOOK_LOGIN_SUCCESS","FACEBOOK_LOGIN_RESET","FACEBOOK_LOGIN_FAILURE","otp_Reset_Signup_Saga","Reset_Signup_otp_Service","RESET_SIGNUP_OTP_SUCCESS","RESET_SIGNUP_OTP_RESET","RESET_SIGNUP_OTP_FAILURE","otp_Reset_Login_Saga","Reset_Login_otp_Service","RESET_LOGIN_OTP_SUCCESS","RESET_LOGIN_OTP_RESET","RESET_LOGIN_OTP_FAILURE","update_Profile_Verification_Saga","User_Profile_Update_Service","UPDATE_PROFILE_VERIFICATION_SUCCESS","UPDATE_PROFILE_VERIFICATION_RESET","UPDATE_PROFILE_VERIFICATION_FAILURE","get_Profile_Information_Saga","Get_User_Information_Service","GET_PROFILE_INFORMATION_SUCCESS","GET_PROFILE_INFORMATION_RESET","GET_PROFILE_INFORMATION_FAILURE","Profile_steps_Saga","Profile_steps_Service","PROFILE_STEPS_SUCCESS","PROFILE_STEPS_RESET","PROFILE_STEPS_FAILURE","Provider_Register_Saga","Profile_Provider_Register_Service","PROFILE_PROVIDER_REGISTER_SUCCESS","PROFILE_PROVIDER_REGISTER_RESET","PROFILE_PROVIDER_REGISTER_FAILURE","Provider_Assign_Saga","Provider_Service_Assign_Service","PROVIDER_ASSIGN_POP3_SUCCESS","PROVIDER_ASSIGN_POP3_RESET","PROVIDER_ASSIGN_POP3_FAILURE","Get_Service_List_Saga","Get_List_Serivce","GET_SERVICE_LIST_SUCCESS","GET_SERVICE_LIST_RESET","GET_SERVICE_LIST_FAILURE","Get_Business_details_Saga","Get_Provider_Business_details_Service","GET_BUSINESSS_DETAILS_SUCCESS","GET_BUSINESSS_DETAILS_RESET","GET_BUSINESSS_DETAILS_FAILURE","Get_Business_Update_Saga","Business_details_Update_Service","BUSINESSS_DETAILS_UPDATE_SUCCESS","BUSINESSS_DETAILS_UPDATE_RESET","BUSINESSS_DETAILS_UPDATE_FAILURE","Get_Image_Gallary_List_Saga","Get_Gallary_List_Service","PROVIDER_GALLARY_LIST_SUCCESS","PROVIDER_GALLARY_LIST_RESET","PROVIDER_GALLARY_LIST_FAILURE","Image_Gallary_Delete_Saga","Gallary_Delete_Service","PROVIDER_GALLARY_DELETE_SUCCESS","PROVIDER_GALLARY_DELETE_RESET","PROVIDER_GALLARY_DELETE_FAILURE","Image_Upload_Saga","Image_Upload_Serivce","IMAGE_UPLOAD_SUCCESS","IMAGE_UPLOAD_RESET","IMAGE_UPLOAD_FAILURE","Get_user_Address_Saga","Get_User_address_Serivce","GET_USER_ADDRESS_SUCCESS","GET_USER_ADDRESS_RESET","GET_USER_ADDRESS_FAILURE","Get_Provider_Address_Saga","Get_Provider_address_Serivce","GET_PROVIDER_ADDRESS_SUCCESS","GET_PROVIDER_ADDRESS_RESET","GET_PROVIDER_ADDRESS_FAILURE","Signup_User_Name_Enter_Saga","User_Enter_Name_Serivce","SIGNUP_USER_ENTER_NAME_SUCCESS","SIGNUP_USER_ENTER_NAME_RESET","SIGNUP_USER_ENTER_NAME_FAILURE","Signup_User_Completion_Saga","User_Update_Profile_Serivce","SIGNUP_USER_COMPLETION_SUCCESS","SIGNUP_USER_COMPLETION_RESET","SIGNUP_USER_COMPLETION_FAILURE","logout_user_Saga","User_logout_Serivce","LOGOUT__SUCCESS","LOGOUT__RESET","LOGOUT__FAILURE","getCountryList_Saga","getCountryList_Service","GET_COUNTRY_LIST_SUCCESS","GET_COUNTRY_LIST_RESET","GET_COUNTRY_LIST_FAILURE","submit_tradie_for_approval","tradie_approval_submit","SUBMIT_FOR_APPROVAL_SUCCESS","SUBMIT_FOR_APPROVAL_RESET","SUBMIT_FOR_APPROVAL_FAILURE","upload_user_Profile_picture_Saga","upload_user_Profile_picture_Serivce","image_url","UPLOAD_USER_PROFILE_PICTURE_SUCCESS","UPLOAD_USER_PROFILE_PICTURE_RESET","UPLOAD_USER_PROFILE_PICTURE_FAILURE","authWatcher","GENERATE_ACCESS_TOKEN_REQUEST","UPDATE_ACCESS_TOKEN_REQUEST","OPT_REGISTER_REQUEST","OTP_LOGIN_REQUEST","FACEBOOK_LOGIN_REQUEST","VERIFY_OTP_REQUEST","RESET_SIGNUP_OTP_REQUEST","RESET_LOGIN_OTP_REQUEST","UPDATE_PROFILE_VERIFICATION_REQUEST","GET_PROFILE_INFORMATION_REQUEST","PROFILE_STEPS_REQUEST","PROFILE_PROVIDER_REGISTER_REQUEST","GET_BUSINESSS_DETAILS_REQUEST","BUSINESSS_DETAILS_UPDATE_REQUEST","PROVIDER_GALLARY_LIST_REQUEST","PROVIDER_GALLARY_DELETE_REQUEST","IMAGE_UPLOAD_REQUEST","GET_SERVICE_LIST_REQUEST","GET_USER_ADDRESS_REQUEST","GET_PROVIDER_ADDRESS_REQUEST","PROVIDER_ASSIGN_POP3_REQUEST","SIGNUP_USER_ENTER_NAME_REQUEST","SIGNUP_USER_COMPLETION_REQUEST","LOGOUT__REQUEST","GET_COUNTRY_LIST_REQUEST","UPLOAD_USER_PROFILE_PICTURE_REQUEST","SUBMIT_FOR_APPROVAL"],"mappings":"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","sourcesContent":["import { put, call, takeLatest } from \"redux-saga/effects\";\r\nimport * as types from \"./types\";\r\nimport * as api from \"./services\";\r\nimport { setLocalStorageAccessToken } from \"../../utilities/hooks/auth/util\";\r\n\r\nfunction* generateAccessToken_Saga(action) {\r\n  try {\r\n    const d = new Date();\r\n    const time = d.getTime();\r\n    const code = Math.floor(1000 + Math.random() * 9000);\r\n    const deviceid = code + \"-\" + time;\r\n    const body = {\r\n      api_key: \"tepatredie005007\",\r\n      device_id: deviceid,\r\n      device_type: 3,\r\n      role: \"user\",\r\n    };\r\n    const result = yield call(api.generateAccessToken_Service, body);\r\n\r\n    yield put({\r\n      type: types.GENERATE_ACCESS_TOKEN_SUCCESS,\r\n      payload: { ...body, access_token: result.data.data.token },\r\n    });\r\n    //setAccessToken(result.data.data.token);\r\n    yield put({\r\n      type: types.GENERATE_ACCESS_TOKEN_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GENERATE_ACCESS_TOKEN_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* updateAccessToken_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.updateAccessToken_Service, userInfo);\r\n\r\n    yield put({\r\n      type: types.UPDATE_ACCESS_TOKEN_SUCCESS,\r\n      payload: userInfo,\r\n    });\r\n    //setAccessToken(userInfo.access_token);\r\n    yield put({\r\n      type: types.UPDATE_ACCESS_TOKEN_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.UPDATE_ACCESS_TOKEN_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* otpRegister_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.otpRegister_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    yield put({\r\n      type: types.OPT_REGISTER_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.OPT_REGISTER_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.OPT_REGISTER_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* verify_otp_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.verify_otp_Service, action.payload, userInfo);\r\n\r\n    const setLoginInfo = () => {\r\n      if (result.data.data.success === 1) {\r\n        const setloginInfo = {\r\n          ...result.data.data.data,\r\n          access_token: userInfo.access_token,\r\n          device_id: userInfo.device_id,\r\n          api_key: userInfo.api_key,\r\n          device_type: userInfo.device_type,\r\n          email: result.data.data.data.email,\r\n          fullname: result.data.data.data.full_name,\r\n          mobile: result.data.data.data.mobile,\r\n          profile_pic: result.data.data.data.profile_pic,\r\n          role: result.data.data.data.access,\r\n          uid: result.data.data.data.id,\r\n          message: result.data.data.message,\r\n        };\r\n\r\n        return setloginInfo;\r\n      } else {\r\n        const setloginInfo = {\r\n          access_token: userInfo.access_token,\r\n          device_id: userInfo.device_id,\r\n          api_key: userInfo.api_key,\r\n          device_type: userInfo.device_type,\r\n          message: result.data.data.message,\r\n        };\r\n\r\n        return setloginInfo;\r\n      }\r\n    };\r\n\r\n    yield put({\r\n      type: types.VERIFY_OTP_SUCCESS,\r\n      payload: setLoginInfo(),\r\n    });\r\n    yield put({\r\n      type: types.VERIFY_OTP_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.VERIFY_OTP_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* otpLogin_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.otpLogin_Service, action.payload, userInfo);\r\n\r\n    yield put({\r\n      type: types.OTP_LOGIN_SUCCESS,\r\n      payload: result.data.data,\r\n    });\r\n    yield put({\r\n      type: types.OTP_LOGIN_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.OTP_LOGIN_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* facebookLogin_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.facebookLogin_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    const setFBLoginInfo = () => {\r\n      if (result.data.data.success === 1) {\r\n        const setloginInfo = {\r\n          access_token: userInfo.access_token,\r\n          device_id: userInfo.device_id,\r\n          api_key: userInfo.api_key,\r\n          device_type: userInfo.device_type,\r\n          email: result.data.data.data.email,\r\n          fullname: result.data.data.data.full_name,\r\n          mobile: result.data.data.data.mobile,\r\n          profile_pic: result.data.data.data.profile_pic,\r\n          role: result.data.data.data.access,\r\n          uid: result.data.data.data.id,\r\n          message: result.data.data.message,\r\n        };\r\n\r\n        return setloginInfo;\r\n      } else {\r\n        const setloginInfo = {\r\n          access_token: userInfo.access_token,\r\n          device_id: userInfo.device_id,\r\n          api_key: userInfo.api_key,\r\n          device_type: userInfo.device_type,\r\n          message: result.data.data.message,\r\n        };\r\n\r\n        return setloginInfo;\r\n      }\r\n    };\r\n\r\n    yield put({\r\n      type: types.FACEBOOK_LOGIN_SUCCESS,\r\n      payload: setFBLoginInfo(),\r\n    });\r\n    yield put({\r\n      type: types.FACEBOOK_LOGIN_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.FACEBOOK_LOGIN_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* otp_Reset_Signup_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Reset_Signup_otp_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    yield put({\r\n      type: types.RESET_SIGNUP_OTP_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.RESET_SIGNUP_OTP_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.RESET_SIGNUP_OTP_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* otp_Reset_Login_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Reset_Login_otp_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    yield put({\r\n      type: types.RESET_LOGIN_OTP_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.RESET_LOGIN_OTP_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.RESET_LOGIN_OTP_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* update_Profile_Verification_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.User_Profile_Update_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n    // console.log(result, \"from saga updatesss\");\r\n    yield put({\r\n      type: types.UPDATE_PROFILE_VERIFICATION_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.UPDATE_PROFILE_VERIFICATION_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.UPDATE_PROFILE_VERIFICATION_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n//get user profile\r\nfunction* get_Profile_Information_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.Get_User_Information_Service, userInfo);\r\n    yield put({\r\n      type: types.GET_PROFILE_INFORMATION_SUCCESS,\r\n      payload: result.data.data,\r\n    });\r\n    yield put({\r\n      type: types.GET_PROFILE_INFORMATION_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_PROFILE_INFORMATION_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\n//profile steps\r\nfunction* Profile_steps_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.Profile_steps_Service, userInfo);\r\n    yield put({\r\n      type: types.PROFILE_STEPS_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.PROFILE_STEPS_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.PROFILE_STEPS_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\n//provider register\r\nfunction* Provider_Register_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Profile_Provider_Register_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n   \r\n    yield put({\r\n      type: types.PROFILE_PROVIDER_REGISTER_SUCCESS,\r\n      payload: result.data.data.data,\r\n    });\r\n    yield put({\r\n      type: types.PROFILE_PROVIDER_REGISTER_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.PROFILE_PROVIDER_REGISTER_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n// pop 3\r\nfunction* Provider_Assign_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Provider_Service_Assign_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n  \r\n    yield put({\r\n      type: types.PROVIDER_ASSIGN_POP3_SUCCESS,\r\n      payload: result.data.data,\r\n    });\r\n    yield put({\r\n      type: types.PROVIDER_ASSIGN_POP3_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.PROVIDER_ASSIGN_POP3_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\n//get serivce list\r\n\r\nfunction* Get_Service_List_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.Get_List_Serivce, action.payload, userInfo);\r\n  \r\n    yield put({\r\n      type: types.GET_SERVICE_LIST_SUCCESS,\r\n      payload: result.data.data,\r\n    });\r\n    yield put({\r\n      type: types.GET_SERVICE_LIST_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_SERVICE_LIST_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* Get_Business_details_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Get_Provider_Business_details_Service,\r\n      userInfo\r\n    );\r\n    // console.log(result.data.data, \"Get_Business_details_Saga\");\r\n    yield put({\r\n      type: types.GET_BUSINESSS_DETAILS_SUCCESS,\r\n      payload: result.data.data,\r\n    });\r\n    yield put({\r\n      type: types.GET_BUSINESSS_DETAILS_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_BUSINESSS_DETAILS_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* Get_Business_Update_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Business_details_Update_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n \r\n    yield put({\r\n      type: types.BUSINESSS_DETAILS_UPDATE_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.BUSINESSS_DETAILS_UPDATE_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.BUSINESSS_DETAILS_UPDATE_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n//provider image gallary list\r\nfunction* Get_Image_Gallary_List_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.Get_Gallary_List_Service, userInfo);\r\n\r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_LIST_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_LIST_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_LIST_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* Image_Gallary_Delete_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Gallary_Delete_Service,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n   \r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_DELETE_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_DELETE_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.PROVIDER_GALLARY_DELETE_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* Image_Upload_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Image_Upload_Serivce,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n    \r\n    yield put({\r\n      type: types.IMAGE_UPLOAD_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.IMAGE_UPLOAD_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.IMAGE_UPLOAD_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\n//user address\r\nfunction* Get_user_Address_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.Get_User_address_Serivce, userInfo);\r\n\r\n    yield put({\r\n      type: types.GET_USER_ADDRESS_SUCCESS,\r\n      payload: result.data.data.data,\r\n    });\r\n    yield put({\r\n      type: types.GET_USER_ADDRESS_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_USER_ADDRESS_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* Get_Provider_Address_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.Get_Provider_address_Serivce,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n    \r\n    yield put({\r\n      type: types.GET_PROVIDER_ADDRESS_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.GET_PROVIDER_ADDRESS_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_PROVIDER_ADDRESS_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* Signup_User_Name_Enter_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.User_Enter_Name_Serivce,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n  \r\n    yield put({\r\n      type: types.SIGNUP_USER_ENTER_NAME_SUCCESS,\r\n      payload: result.data.data.data,\r\n    });\r\n    yield put({\r\n      type: types.SIGNUP_USER_ENTER_NAME_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.SIGNUP_USER_ENTER_NAME_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* Signup_User_Completion_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.User_Update_Profile_Serivce,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    yield put({\r\n      type: types.SIGNUP_USER_COMPLETION_SUCCESS,\r\n      payload: result.data.data.message,\r\n    });\r\n    yield put({\r\n      type: types.SIGNUP_USER_COMPLETION_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.SIGNUP_USER_COMPLETION_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logout_user_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.User_logout_Serivce, userInfo);\r\n\r\n    yield put({\r\n      type: types.LOGOUT__SUCCESS,\r\n      payload: true,\r\n    });\r\n\r\n    yield put({\r\n      type: types.LOGOUT__RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.LOGOUT__FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* getCountryList_Saga() {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(api.getCountryList_Service, userInfo);\r\n\r\n    yield put({\r\n      type: types.GET_COUNTRY_LIST_SUCCESS,\r\n      payload: true,\r\n    });\r\n\r\n    yield put({\r\n      type: types.GET_COUNTRY_LIST_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.GET_COUNTRY_LIST_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\nfunction* submit_tradie_for_approval(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.tradie_approval_submit,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    yield put({\r\n      type: types.SUBMIT_FOR_APPROVAL_SUCCESS,\r\n      payload: result,\r\n    });\r\n\r\n    yield put({\r\n      type: types.SUBMIT_FOR_APPROVAL_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.SUBMIT_FOR_APPROVAL_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* upload_user_Profile_picture_Saga(action) {\r\n  try {\r\n    let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n    const result = yield call(\r\n      api.upload_user_Profile_picture_Serivce,\r\n      action.payload,\r\n      userInfo\r\n    );\r\n\r\n    if (result.success === 1) {\r\n      const setloginInfo = {\r\n        access_token: userInfo.access_token,\r\n        device_id: userInfo.device_id,\r\n        api_key: userInfo.api_key,\r\n        device_type: userInfo.device_type,\r\n        email: userInfo.email,\r\n        fullname: userInfo.full_name,\r\n        mobile: userInfo.mobile,\r\n        profile_pic: result.image_url,\r\n        role: userInfo.access,\r\n        uid: userInfo.id,\r\n        message: result.message,\r\n      };\r\n      setLocalStorageAccessToken(setloginInfo);\r\n    }\r\n\r\n    yield put({\r\n      type: types.UPLOAD_USER_PROFILE_PICTURE_SUCCESS,\r\n      payload: result.image_url,\r\n    });\r\n    yield put({\r\n      type: types.UPLOAD_USER_PROFILE_PICTURE_RESET,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: types.UPLOAD_USER_PROFILE_PICTURE_FAILURE,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* authWatcher() {\r\n  yield takeLatest(\r\n    types.GENERATE_ACCESS_TOKEN_REQUEST,\r\n    generateAccessToken_Saga\r\n  );\r\n  yield takeLatest(types.UPDATE_ACCESS_TOKEN_REQUEST, updateAccessToken_Saga);\r\n  yield takeLatest(types.OPT_REGISTER_REQUEST, otpRegister_Saga);\r\n  yield takeLatest(types.OTP_LOGIN_REQUEST, otpLogin_Saga);\r\n  yield takeLatest(types.FACEBOOK_LOGIN_REQUEST, facebookLogin_Saga);\r\n  yield takeLatest(types.VERIFY_OTP_REQUEST, verify_otp_Saga);\r\n  yield takeLatest(types.RESET_SIGNUP_OTP_REQUEST, otp_Reset_Signup_Saga);\r\n  yield takeLatest(types.RESET_LOGIN_OTP_REQUEST, otp_Reset_Login_Saga);\r\n  yield takeLatest(\r\n    types.UPDATE_PROFILE_VERIFICATION_REQUEST,\r\n    update_Profile_Verification_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.GET_PROFILE_INFORMATION_REQUEST,\r\n    get_Profile_Information_Saga\r\n  );\r\n  yield takeLatest(types.PROFILE_STEPS_REQUEST, Profile_steps_Saga);\r\n  yield takeLatest(\r\n    types.PROFILE_PROVIDER_REGISTER_REQUEST,\r\n    Provider_Register_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.GET_BUSINESSS_DETAILS_REQUEST,\r\n    Get_Business_details_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.BUSINESSS_DETAILS_UPDATE_REQUEST,\r\n    Get_Business_Update_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.PROVIDER_GALLARY_LIST_REQUEST,\r\n    Get_Image_Gallary_List_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.PROVIDER_GALLARY_DELETE_REQUEST,\r\n    Image_Gallary_Delete_Saga\r\n  );\r\n  yield takeLatest(types.IMAGE_UPLOAD_REQUEST, Image_Upload_Saga);\r\n  yield takeLatest(types.GET_SERVICE_LIST_REQUEST, Get_Service_List_Saga);\r\n  yield takeLatest(types.GET_USER_ADDRESS_REQUEST, Get_user_Address_Saga);\r\n  yield takeLatest(\r\n    types.GET_PROVIDER_ADDRESS_REQUEST,\r\n    Get_Provider_Address_Saga\r\n  );\r\n  yield takeLatest(types.PROVIDER_ASSIGN_POP3_REQUEST, Provider_Assign_Saga);\r\n  yield takeLatest(\r\n    types.SIGNUP_USER_ENTER_NAME_REQUEST,\r\n    Signup_User_Name_Enter_Saga\r\n  );\r\n  yield takeLatest(\r\n    types.SIGNUP_USER_COMPLETION_REQUEST,\r\n    Signup_User_Completion_Saga\r\n  );\r\n  yield takeLatest(types.LOGOUT__REQUEST, logout_user_Saga);\r\n  yield takeLatest(types.GET_COUNTRY_LIST_REQUEST, getCountryList_Saga);\r\n  yield takeLatest(\r\n    types.UPLOAD_USER_PROFILE_PICTURE_REQUEST,\r\n    upload_user_Profile_picture_Saga\r\n  );\r\n  yield takeLatest(types.SUBMIT_FOR_APPROVAL, submit_tradie_for_approval);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}