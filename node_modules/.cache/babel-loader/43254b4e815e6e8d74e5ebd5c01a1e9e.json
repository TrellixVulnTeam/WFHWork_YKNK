{"ast":null,"code":"import Cookies from 'js-cookie';\nimport jwt_decode from 'jwt-decode';\nexport const setAccessToken = token => {\n  Cookies.set('token', token);\n};\nexport const getAccessToken = () => {\n  return Cookies.get('token');\n};\nexport const removeAccessToken = () => {\n  return Cookies.remove('token');\n};\nexport const isAuthenticated = () => {\n  if (getAccessToken()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const setCookiePolicy = () => {\n  let expireDate = new Date();\n  expireDate.setFullYear(expireDate.getFullYear(), expireDate.getMonth() + 6);\n  Cookies.set('cookiepolicy', 'true', expireDate);\n};\nexport const getCookiePolicy = () => {\n  return Cookies.get('cookiepolicy');\n};\nexport const isCookiePolicy = () => {\n  if (getCookiePolicy()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const decodeJwtToken = token => {\n  return jwt_decode(token);\n};\nexport const setLocalStorageAccessToken = info => {\n  localStorage.setItem('tepatredieUserInfo', JSON.stringify(info));\n};\nexport const getLocalStorageAccessToken = () => {\n  return JSON.parse(localStorage.getItem('tepatredieUserInfo'));\n}; //service search info\n\nexport const setLocalStorageAccessSearchInfo = search => {\n  localStorage.setItem('tradiesearch', JSON.stringify(search));\n};\nexport const getLocalStorageAccessSearchInfo = () => {\n  return JSON.parse(localStorage.getItem('tradiesearch'));\n};\nexport const isGenerateAccessToken = () => {\n  if (getLocalStorageAccessToken()) {\n    return true;\n  } else {\n    return false;\n  }\n}; //service load on link set load data\n\nexport const setLocalStorageAccessLoadSearchInfo = search => {\n  localStorage.setItem('onloaddata', JSON.stringify(search));\n};\nexport const getLocalStorageAccessLoadSearchInfo = () => {\n  return JSON.parse(localStorage.getItem('onloaddata'));\n};","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/utilities/hooks/auth/util.js"],"names":["Cookies","jwt_decode","setAccessToken","token","set","getAccessToken","get","removeAccessToken","remove","isAuthenticated","setCookiePolicy","expireDate","Date","setFullYear","getFullYear","getMonth","getCookiePolicy","isCookiePolicy","decodeJwtToken","setLocalStorageAccessToken","info","localStorage","setItem","JSON","stringify","getLocalStorageAccessToken","parse","getItem","setLocalStorageAccessSearchInfo","search","getLocalStorageAccessSearchInfo","isGenerateAccessToken","setLocalStorageAccessLoadSearchInfo","getLocalStorageAccessLoadSearchInfo"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACxCH,EAAAA,OAAO,CAACI,GAAR,CAAY,OAAZ,EAAqBD,KAArB;AACA,CAFM;AAIP,OAAO,MAAME,cAAc,GAAG,MAAM;AACnC,SAAOL,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAP;AACA,CAFM;AAGP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACtC,SAAOP,OAAO,CAACQ,MAAR,CAAe,OAAf,CAAP;AACA,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACpC,MAAIJ,cAAc,EAAlB,EAAsB;AACrB,WAAO,IAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAP;AACA;AACD,CANM;AAQP,OAAO,MAAMK,eAAe,GAAG,MAAM;AACpC,MAAIC,UAAU,GAAG,IAAIC,IAAJ,EAAjB;AACAD,EAAAA,UAAU,CAACE,WAAX,CAAuBF,UAAU,CAACG,WAAX,EAAvB,EAAiDH,UAAU,CAACI,QAAX,KAAwB,CAAzE;AACAf,EAAAA,OAAO,CAACI,GAAR,CAAY,cAAZ,EAA4B,MAA5B,EAAoCO,UAApC;AACA,CAJM;AAMP,OAAO,MAAMK,eAAe,GAAG,MAAM;AACpC,SAAOhB,OAAO,CAACM,GAAR,CAAY,cAAZ,CAAP;AACA,CAFM;AAIP,OAAO,MAAMW,cAAc,GAAG,MAAM;AACnC,MAAID,eAAe,EAAnB,EAAuB;AACtB,WAAO,IAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAP;AACA;AACD,CANM;AAQP,OAAO,MAAME,cAAc,GAAIf,KAAD,IAAW;AACxC,SAAOF,UAAU,CAACE,KAAD,CAAjB;AACA,CAFM;AAIP,OAAO,MAAMgB,0BAA0B,GAAIC,IAAD,IAAU;AACnDC,EAAAA,YAAY,CAACC,OAAb,CAAqB,oBAArB,EAA2CC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA3C;AACA,CAFM;AAIP,OAAO,MAAMK,0BAA0B,GAAG,MAAM;AAC/C,SAAOF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,oBAArB,CAAX,CAAP;AACA,CAFM,C,CAGP;;AACA,OAAO,MAAMC,+BAA+B,GAAIC,MAAD,IAAY;AAC1DR,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeK,MAAf,CAArC;AACA,CAFM;AAIP,OAAO,MAAMC,+BAA+B,GAAG,MAAM;AACpD,SAAOP,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,cAArB,CAAX,CAAP;AACA,CAFM;AAIP,OAAO,MAAMI,qBAAqB,GAAG,MAAM;AAC1C,MAAIN,0BAA0B,EAA9B,EAAkC;AACjC,WAAO,IAAP;AACA,GAFD,MAEO;AACN,WAAO,KAAP;AACA;AACD,CANM,C,CAQP;;AACA,OAAO,MAAMO,mCAAmC,GAAIH,MAAD,IAAY;AAC9DR,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeK,MAAf,CAAnC;AACA,CAFM;AAIP,OAAO,MAAMI,mCAAmC,GAAG,MAAM;AACxD,SAAOV,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,YAArB,CAAX,CAAP;AACA,CAFM","sourcesContent":["import Cookies from 'js-cookie';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const setAccessToken = (token) => {\r\n\tCookies.set('token', token);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n\treturn Cookies.get('token');\r\n};\r\nexport const removeAccessToken = () => {\r\n\treturn Cookies.remove('token')\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n\tif (getAccessToken()) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nexport const setCookiePolicy = () => {\r\n\tlet expireDate = new Date();\r\n\texpireDate.setFullYear(expireDate.getFullYear(), expireDate.getMonth() + 6);\r\n\tCookies.set('cookiepolicy', 'true', expireDate);\r\n};\r\n\r\nexport const getCookiePolicy = () => {\r\n\treturn Cookies.get('cookiepolicy');\r\n};\r\n\r\nexport const isCookiePolicy = () => {\r\n\tif (getCookiePolicy()) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nexport const decodeJwtToken = (token) => {\r\n\treturn jwt_decode(token);\r\n};\r\n\r\nexport const setLocalStorageAccessToken = (info) => {\r\n\tlocalStorage.setItem('tepatredieUserInfo', JSON.stringify(info));\r\n};\r\n\r\nexport const getLocalStorageAccessToken = () => {\r\n\treturn JSON.parse(localStorage.getItem('tepatredieUserInfo'));\r\n};\r\n//service search info\r\nexport const setLocalStorageAccessSearchInfo = (search) => {\r\n\tlocalStorage.setItem('tradiesearch', JSON.stringify(search));\r\n};\r\n\r\nexport const getLocalStorageAccessSearchInfo = () => {\r\n\treturn JSON.parse(localStorage.getItem('tradiesearch'));\r\n};\r\n\r\nexport const isGenerateAccessToken = () => {\r\n\tif (getLocalStorageAccessToken()) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n//service load on link set load data\r\nexport const setLocalStorageAccessLoadSearchInfo = (search) => {\r\n\tlocalStorage.setItem('onloaddata', JSON.stringify(search));\r\n};\r\n\r\nexport const getLocalStorageAccessLoadSearchInfo = () => {\r\n\treturn JSON.parse(localStorage.getItem('onloaddata'));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}