{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\src\\\\pages\\\\UserEditProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport * as Actions from \"../../redux/auth/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/icon-cancelpopup.svg\";\nimport Upload from \"../../assets/icons/user.png\"; // Handling Form with Formik\n\nimport { Formik, Form } from \"formik\"; // Handling Form Validation with yup\n\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pop1 = () => {\n  _s();\n\n  const {\n    userData,\n    editProfile\n  } = useSelector(state => state.auth);\n  const {\n    full_name,\n    email,\n    mobile,\n    profile_pic,\n    id,\n    country_code,\n    online_address\n  } = userData;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    register,\n    // handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [redirectpop2, setRedirectpop2] = useState(false);\n  const [uploadImg, setUploadImg] = useState(\"\");\n  const {\n    Signup_User_Completion_Action,\n    User_Profile_Get_Information_Action,\n    upload_user_Profile_picture_Action\n  } = Actions;\n  const initialValues = {\n    fullNamee: full_name,\n    EmailAddress: email,\n    country_code: country_code,\n    number: mobile,\n    address: online_address\n  };\n  const validationSchema = Yup.object().shape({\n    fullNamee: Yup.string().required(\"Full Namee is required\"),\n    EmailAddress: Yup.string().required(\"Email is required\").email(),\n    country_code: Yup.string().required(\"Country code is required\").min(2).max(5),\n    number: Yup.string().required(\"Number is required\").min(6).max(16),\n    address: Yup.string().required(\"address is required\")\n  });\n\n  const handleSubmit = data => {\n    dispatch(Signup_User_Completion_Action(data));\n  };\n\n  if (editProfile === \"Data successfully updated.\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/user-profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  const showMyImage = fileInput => {\n    var files = fileInput.files;\n\n    for (var i = 0; i < files.length; i++) {\n      var file = files[i];\n      var imageType = /image.*/;\n\n      if (!file.type.match(imageType)) {\n        continue;\n      }\n\n      var img = document.getElementById(\"thumbnil\");\n      var imageClose = document.getElementById(\"imageClose\");\n      img.file = file;\n      var reader = new FileReader();\n\n      reader.onload = function (aImg) {\n        return function (e) {\n          aImg.src = e.target.result;\n          imageClose.style.opacity = \"1\";\n        };\n      }(img);\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    var img = document.getElementById(\"thumbnil\");\n    var imageClose = document.getElementById(\"imageClose\");\n    imageClose.style.opacity = \"0\";\n    img.src = Upload;\n    setUploadImg(\"\");\n  };\n\n  const fileToDataUri = image => {\n    return new Promise(res => {\n      const reader = new FileReader();\n      const {\n        type,\n        name,\n        size\n      } = image;\n      reader.addEventListener(\"load\", () => {\n        res({\n          base64: reader.result,\n          name: name,\n          type,\n          size: size\n        });\n      });\n      reader.readAsDataURL(image);\n    });\n  };\n\n  const handleImageChangeInput = async event => {\n    const {\n      target\n    } = event;\n    const file = [target.files[0]];\n    const newImagesPromises = [];\n\n    for (let i = 0; i < target.files.length; i++) {\n      newImagesPromises.push(fileToDataUri(target.files[i]));\n    }\n\n    const newImages = await Promise.all(newImagesPromises); // console.log(\"files \", file[0]);\n\n    dispatch(upload_user_Profile_picture_Action(file));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user-info-modal popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: \"true\",\n        initialValues: initialValues,\n        onSubmit: handleSubmit,\n        validationSchema: validationSchema,\n        children: (formik, isSubmitting) => {\n          var _formik$values$fullNa, _formik$values$fullNa2;\n\n          return /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            className: \"popup__form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Edit Your Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => {\n                  e.target.parentElement.parentElement.parentElement.style.display = \"none\";\n                  history.push(\"/user-profile\");\n                },\n                className: \"Closesvg\",\n                children: /*#__PURE__*/_jsxDEV(Close, {\n                  width: \"30px\",\n                  height: \"30px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                marginBottom: \"1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload Profile pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"imageClose\",\n                style: {\n                  opacity: \"0\"\n                },\n                onClick: () => {\n                  handleRemoveImage();\n                },\n                children: /*#__PURE__*/_jsxDEV(Close, {\n                  width: \"15px\",\n                  height: \"15px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"file-input\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"thumbnil\",\n                  className: \"userProfile\",\n                  src: profile_pic === \"\" ? Upload : `https://api.tapatradie.com/uploads/` + profile_pic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: uploadImg,\n                id: \"file-input\",\n                type: \"file\",\n                style: {\n                  display: \"none\"\n                },\n                ...register(\"uploadImage\", {}),\n                onChange: e => {\n                  showMyImage(e.target);\n                  handleImageChangeInput(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                marginBottom: \"1rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Full name\",\n                type: \"text\",\n                name: \"fullNamee\",\n                onChange: formik.handleChange,\n                value: ((_formik$values$fullNa = formik.values.fullNamee) === null || _formik$values$fullNa === void 0 ? void 0 : _formik$values$fullNa.charAt(0).toUpperCase()) + ((_formik$values$fullNa2 = formik.values.fullNamee) === null || _formik$values$fullNa2 === void 0 ? void 0 : _formik$values$fullNa2.slice(1))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), formik.errors.fullNamee && formik.touched.fullNamee ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: [formik.errors.fullNamee, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                marginBottom: \"1rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Email\",\n                type: \"Email\",\n                name: \"EmailAddress\",\n                onChange: formik.handleChange,\n                value: formik.values.EmailAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), formik.errors.EmailAddress && formik.touched.EmailAddress ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: [formik.errors.EmailAddress, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                marginBottom: \"1rem\",\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Country Code\",\n                name: \"country_code\",\n                onChange: formik.handleChange,\n                value: formik.values.country_code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Number\",\n                name: \"number\",\n                onChange: formik.handleChange,\n                value: formik.values.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), formik.errors.number && formik.touched.number ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: [formik.errors.number, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                marginBottom: \"1rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Address\",\n                type: \"text\",\n                name: \"address\",\n                onChange: formik.handleChange,\n                value: formik.values.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), formik.errors.address && formik.touched.address ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: [formik.errors.address, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn-primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pop1, \"XZGLlM+FgOW/OXtMHprYPkqNOJY=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useForm];\n});\n\n_c = Pop1;\nexport default Pop1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pop1\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/pages/UserEditProfile/index.js"],"names":["React","useState","Select","Actions","useDispatch","useSelector","useForm","Redirect","useHistory","Upload","Formik","Form","Yup","Pop1","userData","editProfile","state","auth","full_name","email","mobile","profile_pic","id","country_code","online_address","dispatch","history","register","formState","errors","redirectpop2","setRedirectpop2","uploadImg","setUploadImg","Signup_User_Completion_Action","User_Profile_Get_Information_Action","upload_user_Profile_picture_Action","initialValues","fullNamee","EmailAddress","number","address","validationSchema","object","shape","string","required","min","max","handleSubmit","data","showMyImage","fileInput","files","i","length","file","imageType","type","match","img","document","getElementById","imageClose","reader","FileReader","onload","aImg","e","src","target","result","style","opacity","readAsDataURL","handleRemoveImage","fileToDataUri","image","Promise","res","name","size","addEventListener","base64","handleImageChangeInput","event","newImagesPromises","push","newImages","all","formik","isSubmitting","parentElement","display","marginBottom","handleChange","values","charAt","toUpperCase","slice","touched","color","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport * as Actions from \"../../redux/auth/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ReactComponent as Close } from \"../../assets/icons/icon-cancelpopup.svg\";\r\nimport Upload from \"../../assets/icons/user.png\";\r\n// Handling Form with Formik\r\nimport { Formik, Form } from \"formik\";\r\n// Handling Form Validation with yup\r\nimport * as Yup from \"yup\";\r\n\r\nconst Pop1 = () => {\r\n  const { userData, editProfile } = useSelector((state) => state.auth);\r\n  const {\r\n    full_name,\r\n    email,\r\n    mobile,\r\n    profile_pic,\r\n    id,\r\n    country_code,\r\n    online_address,\r\n  } = userData;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    // handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [redirectpop2, setRedirectpop2] = useState(false);\r\n  const [uploadImg, setUploadImg] = useState(\"\");\r\n  const {\r\n    Signup_User_Completion_Action,\r\n    User_Profile_Get_Information_Action,\r\n    upload_user_Profile_picture_Action,\r\n  } = Actions;\r\n\r\n  const initialValues = {\r\n    fullNamee: full_name,\r\n    EmailAddress: email,\r\n    country_code: country_code,\r\n    number: mobile,\r\n    address: online_address,\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    fullNamee: Yup.string().required(\"Full Namee is required\"),\r\n    EmailAddress: Yup.string().required(\"Email is required\").email(),\r\n    country_code: Yup.string()\r\n      .required(\"Country code is required\")\r\n      .min(2)\r\n      .max(5),\r\n    number: Yup.string().required(\"Number is required\").min(6).max(16),\r\n    address: Yup.string().required(\"address is required\"),\r\n  });\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(Signup_User_Completion_Action(data));\r\n  };\r\n\r\n  if (editProfile === \"Data successfully updated.\") {\r\n    return <Redirect to=\"/user-profile\" />;\r\n  }\r\n\r\n  const showMyImage = (fileInput) => {\r\n    var files = fileInput.files;\r\n    for (var i = 0; i < files.length; i++) {\r\n      var file = files[i];\r\n      var imageType = /image.*/;\r\n      if (!file.type.match(imageType)) {\r\n        continue;\r\n      }\r\n      var img = document.getElementById(\"thumbnil\");\r\n      var imageClose = document.getElementById(\"imageClose\");\r\n      img.file = file;\r\n      var reader = new FileReader();\r\n      reader.onload = (function (aImg) {\r\n        return function (e) {\r\n          aImg.src = e.target.result;\r\n          imageClose.style.opacity = \"1\";\r\n        };\r\n      })(img);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleRemoveImage = () => {\r\n    var img = document.getElementById(\"thumbnil\");\r\n    var imageClose = document.getElementById(\"imageClose\");\r\n    imageClose.style.opacity = \"0\";\r\n    img.src = Upload;\r\n    setUploadImg(\"\");\r\n  };\r\n\r\n  const fileToDataUri = (image) => {\r\n    return new Promise((res) => {\r\n      const reader = new FileReader();\r\n      const { type, name, size } = image;\r\n      reader.addEventListener(\"load\", () => {\r\n        res({\r\n          base64: reader.result,\r\n          name: name,\r\n          type,\r\n          size: size,\r\n        });\r\n      });\r\n      reader.readAsDataURL(image);\r\n    });\r\n  };\r\n\r\n  const handleImageChangeInput = async (event) => {\r\n    const { target } = event;\r\n    const file = [target.files[0]];\r\n    const newImagesPromises = [];\r\n    for (let i = 0; i < target.files.length; i++) {\r\n      newImagesPromises.push(fileToDataUri(target.files[i]));\r\n    }\r\n    const newImages = await Promise.all(newImagesPromises);\r\n    // console.log(\"files \", file[0]);\r\n    dispatch(upload_user_Profile_picture_Action(file));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"user-info-modal popup\">\r\n        <br />\r\n        <Formik\r\n          enableReinitialize=\"true\"\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(formik, isSubmitting) => {\r\n            return (\r\n              <Form autoComplete=\"off\" className=\"popup__form\">\r\n                {/* <form className=\"popup__form\" onSubmit={handleSubmit(onSubmit)}> */}\r\n                <h2>\r\n                  Edit Your Details\r\n                  <span\r\n                    onClick={(e) => {\r\n                      e.target.parentElement.parentElement.parentElement.style.display =\r\n                        \"none\";\r\n                      history.push(\"/user-profile\");\r\n                    }}\r\n                    className=\"Closesvg\"\r\n                  >\r\n                    <Close width=\"30px\" height=\"30px\" />\r\n                  </span>\r\n                </h2>\r\n\r\n                <div className=\"input-group\" style={{ marginBottom: \"1rem\" }}>\r\n                  <p>Upload Profile pic</p>\r\n                  <br />\r\n                  <div\r\n                    id=\"imageClose\"\r\n                    style={{ opacity: \"0\" }}\r\n                    onClick={() => {\r\n                      handleRemoveImage();\r\n                    }}\r\n                  >\r\n                    <Close width=\"15px\" height=\"15px\" />\r\n                  </div>\r\n                  <label for=\"file-input\">\r\n                    <img\r\n                      id=\"thumbnil\"\r\n                      className=\"userProfile\"\r\n                      src={\r\n                        profile_pic === \"\"\r\n                          ? Upload\r\n                          : `https://api.tapatradie.com/uploads/` + profile_pic\r\n                      }\r\n                    />\r\n                  </label>\r\n\r\n                  <input\r\n                    value={uploadImg}\r\n                    id=\"file-input\"\r\n                    type=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                    {...register(\"uploadImage\", {})}\r\n                    onChange={(e) => {\r\n                      showMyImage(e.target);\r\n\r\n                      handleImageChangeInput(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <br />\r\n                <div className=\"input-group\" style={{ marginBottom: \"1rem\" }}>\r\n                  <input\r\n                    placeholder=\"Full name\"\r\n                    type=\"text\"\r\n                    name=\"fullNamee\"\r\n                    onChange={formik.handleChange}\r\n                    value={\r\n                      formik.values.fullNamee?.charAt(0).toUpperCase() +\r\n                      formik.values.fullNamee?.slice(1)\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                {formik.errors.fullNamee && formik.touched.fullNamee ? (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors.fullNamee}{\" \"}\r\n                  </span>\r\n                ) : null}\r\n\r\n                <br />\r\n                <div className=\"input-group\" style={{ marginBottom: \"1rem\" }}>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    type=\"Email\"\r\n                    name=\"EmailAddress\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EmailAddress}\r\n                  />\r\n                </div>\r\n                {formik.errors.EmailAddress && formik.touched.EmailAddress ? (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors.EmailAddress}{\" \"}\r\n                  </span>\r\n                ) : null}\r\n                <br />\r\n\r\n                <div\r\n                  className=\"input-group\"\r\n                  style={{\r\n                    marginBottom: \"1rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Country Code\"\r\n                    name=\"country_code\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.country_code}\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Number\"\r\n                    name=\"number\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.number}\r\n                  />\r\n                </div>\r\n                {formik.errors.number && formik.touched.number ? (\r\n                  <span style={{ color: \"red\" }}>{formik.errors.number} </span>\r\n                ) : null}\r\n                <br />\r\n                <div className=\"input-group\" style={{ marginBottom: \"1rem\" }}>\r\n                  <input\r\n                    placeholder=\"Address\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.address}\r\n                  />\r\n                </div>\r\n                {formik.errors.address && formik.touched.address ? (\r\n                  <span style={{ color: \"red\" }}>{formik.errors.address} </span>\r\n                ) : null}\r\n                <br />\r\n                <br />\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n                  Save\r\n                </button>\r\n                {/* </form> */}\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default Pop1;\r\n"]},"metadata":{},"sourceType":"module"}