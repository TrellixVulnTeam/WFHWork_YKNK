{"ast":null,"code":"import axios from \"axios\";\nconst {\n  REACT_APP_URL\n} = process.env;\nexport const sendPostRequest = async (body, link, config) => {\n  let data;\n\n  try {\n    await axios.post(`https://api.tapatradie.com/api${link}`, body, config).then(response => {\n      data = response;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  return {\n    data\n  };\n};\nexport const sendPostRequestNew = async (body, link, config) => {\n  let data;\n\n  try {\n    await axios.post(`${link}`, body, config).then(response => {\n      data = response;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/utilities/hooks/auth/sendRequest.js"],"names":["axios","REACT_APP_URL","process","env","sendPostRequest","body","link","config","data","post","then","response","error","console","log","sendPostRequestNew"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBC,OAAO,CAACC,GAAlC;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,MAAnB,KAA8B;AAC3D,MAAIC,IAAJ;;AACA,MAAI;AACF,UAAMR,KAAK,CACRS,IADG,CACG,iCAAgCH,IAAK,EADxC,EAC2CD,IAD3C,EACiDE,MADjD,EAEHG,IAFG,CAEGC,QAAD,IAAc;AAClBH,MAAAA,IAAI,GAAGG,QAAP;AACD,KAJG,CAAN;AAKD,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CAZM;AAaP,OAAO,MAAMO,kBAAkB,GAAG,OAAOV,IAAP,EAAaC,IAAb,EAAmBC,MAAnB,KAA8B;AAC9D,MAAIC,IAAJ;;AACA,MAAI;AACF,UAAMR,KAAK,CACRS,IADG,CACG,GAAEH,IAAK,EADV,EACaD,IADb,EACmBE,MADnB,EAEHG,IAFG,CAEGC,QAAD,IAAc;AAClBH,MAAAA,IAAI,GAAGG,QAAP;AACD,KAJG,CAAN;AAKD,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CAZM","sourcesContent":["import axios from \"axios\";\r\n\r\nconst { REACT_APP_URL } = process.env;\r\n\r\nexport const sendPostRequest = async (body, link, config) => {\r\n  let data;\r\n  try {\r\n    await axios\r\n      .post(`https://api.tapatradie.com/api${link}`, body, config)\r\n      .then((response) => {\r\n        data = response;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return { data };\r\n};\r\nexport const sendPostRequestNew = async (body, link, config) => {\r\n  let data;\r\n  try {\r\n    await axios\r\n      .post(`${link}`, body, config)\r\n      .then((response) => {\r\n        data = response;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return { data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}