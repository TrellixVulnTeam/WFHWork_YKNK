{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\src\\\\pages\\\\tradieAllPopup\\\\pop1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport * as Actions from \"../../redux/auth/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { countryListAlpha3 } from \"./CountryList\";\nimport { Redirect } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/icon-cancelpopup.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pop1 = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    Profile_Provider_Register_Action\n  } = Actions;\n  const {\n    login,\n    verify_OTP\n  } = useSelector(state => state.auth);\n\n  if ((verify_OTP === null || verify_OTP === void 0 ? void 0 : verify_OTP.fullname) !== \"\" && (verify_OTP === null || verify_OTP === void 0 ? void 0 : verify_OTP.role) === \"provider\" && (verify_OTP === null || verify_OTP === void 0 ? void 0 : verify_OTP.register_complete) === 1) {\n    history.push(\"/\");\n  }\n\n  if ((verify_OTP === null || verify_OTP === void 0 ? void 0 : verify_OTP.fullname) !== \"\" && (verify_OTP === null || verify_OTP === void 0 ? void 0 : verify_OTP.register_complete) === 0) {\n    history.push(\"/tradie-popup-step2\");\n  }\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [selectedCountry, setSelectOption] = useState({\n    selectedOption: null\n  });\n  const {\n    selectedOption\n  } = selectedCountry;\n  const [countryMsg, setCountryMsg] = useState(false);\n  const [formData, setFormData] = useState();\n  const [redirectpop2, setRedirectpop2] = useState(false);\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      border: \"1px solid lightgray\",\n      \"&:hover\": {\n        borderColor: \"gray\"\n      } // border style on hover\n\n    }),\n    option: (provided, state) => ({ ...provided,\n      backgroundColor: state.isFocused ? \"#dddddd\" : \"#ffffff\",\n      color: state.isSelected ? \"black\" : \"black\"\n    })\n  };\n\n  const handleChange = selectedOption => {\n    setSelectOption({\n      selectedOption\n    });\n  };\n\n  const onSubmit = data => {\n    if (selectedCountry.selectedOption !== null) {\n      const datatoSend = { ...data,\n        country: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.label\n      };\n      setCountryMsg(false);\n      dispatch(Profile_Provider_Register_Action(datatoSend));\n      setRedirectpop2(true);\n    } else {\n      setCountryMsg(true);\n      alert(\"Please select country\");\n    }\n  };\n\n  let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\n  const {\n    fullname,\n    email\n  } = userInfo;\n  /*   if (fullname !== \"\" && email !== \"\" && redirectpop2) {\r\n    return <Redirect to=\"/tradie-popup-step2\" />;\r\n  } */\n  // console.log(\"re rendering\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user-info-modal popup\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Enter Your Details\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          style: {\n            marginBottom: \"1.8rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register(\"fullname\", {\n              required: {\n                value: true,\n                message: \"Full name is required\"\n              },\n              minLength: {\n                value: 2,\n                message: \"min value > 3\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Full Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), errors.fullname && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            marginTop: \"-20px\"\n          },\n          children: errors.fullname.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          style: {\n            marginBottom: \"1.8rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            ...register(\"EmailAddress\", {\n              required: {\n                value: true,\n                message: \"Email is required\"\n              },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: \"Enter Valid Email\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), errors.EmailAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.EmailAddress.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedOption,\n            onChange: handleChange,\n            options: countryListAlpha3,\n            isSearchable: true,\n            placeholder: \"Select Country\",\n            autoFocus: false,\n            styles: customStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), countryMsg ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Please select country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register(\"city\", {\n              required: {\n                value: true,\n                message: \"Full name is required\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), errors.city && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: errors.city.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-primary\",\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pop1, \"HncBJriZclS7TV1/7RUsYEhrfqQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useForm];\n});\n\n_c = Pop1;\nexport default Pop1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pop1\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/pages/tradieAllPopup/pop1.js"],"names":["React","useState","useEffect","Select","Actions","useDispatch","useSelector","useForm","countryListAlpha3","Redirect","useHistory","Pop1","dispatch","history","Profile_Provider_Register_Action","login","verify_OTP","state","auth","fullname","role","register_complete","push","register","handleSubmit","watch","formState","errors","selectedCountry","setSelectOption","selectedOption","countryMsg","setCountryMsg","formData","setFormData","redirectpop2","setRedirectpop2","customStyles","control","base","border","borderColor","option","provided","backgroundColor","isFocused","color","isSelected","handleChange","onSubmit","data","datatoSend","country","label","alert","userInfo","JSON","parse","localStorage","getItem","email","marginBottom","required","value","message","minLength","marginTop","pattern","EmailAddress","city"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport * as Actions from \"../../redux/auth/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { countryListAlpha3 } from \"./CountryList\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ReactComponent as Close } from \"../../assets/icons/icon-cancelpopup.svg\";\r\nconst Pop1 = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { Profile_Provider_Register_Action } = Actions;\r\n  const { login, verify_OTP } = useSelector((state) => state.auth);\r\n\r\n\r\n  if (\r\n    verify_OTP?.fullname !== \"\" &&\r\n    verify_OTP?.role === \"provider\" &&\r\n    verify_OTP?.register_complete === 1\r\n  ) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  if (\r\n    verify_OTP?.fullname !== \"\" &&\r\n    verify_OTP?.register_complete === 0\r\n  ) {\r\n    history.push(\"/tradie-popup-step2\");\r\n  }\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [selectedCountry, setSelectOption] = useState({ selectedOption: null });\r\n  const { selectedOption } = selectedCountry;\r\n  const [countryMsg, setCountryMsg] = useState(false);\r\n  const [formData, setFormData] = useState();\r\n  const [redirectpop2, setRedirectpop2] = useState(false);\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      border: \"1px solid lightgray\",\r\n      \"&:hover\": { borderColor: \"gray\" }, // border style on hover\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      backgroundColor: state.isFocused ? \"#dddddd\" : \"#ffffff\",\r\n      color: state.isSelected ? \"black\" : \"black\",\r\n    }),\r\n  };\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectOption({ selectedOption });\r\n  };\r\n  const onSubmit = (data) => {\r\n    if (selectedCountry.selectedOption !== null) {\r\n      const datatoSend = { ...data, country: selectedOption?.label };\r\n\r\n      setCountryMsg(false);\r\n      dispatch(Profile_Provider_Register_Action(datatoSend));\r\n      setRedirectpop2(true);\r\n    } else {\r\n      setCountryMsg(true);\r\n      alert(\"Please select country\");\r\n    }\r\n  };\r\n  let userInfo = JSON.parse(localStorage.getItem(\"tepatredieUserInfo\"));\r\n  const { fullname, email } = userInfo;\r\n\r\n  /*   if (fullname !== \"\" && email !== \"\" && redirectpop2) {\r\n    return <Redirect to=\"/tradie-popup-step2\" />;\r\n  } */\r\n\r\n  // console.log(\"re rendering\");\r\n  return (\r\n    <div>\r\n      <section className=\"user-info-modal popup\">\r\n        <form className=\"popup__form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <h2>\r\n            Enter Your Details{\" \"}\r\n            {/* <span\r\n              onClick={(e) => {\r\n                e.target.parentElement.parentElement.parentElement.style.display =\r\n                  \"none\";\r\n                history.push(\"/tradie-my-profile\");\r\n              }}\r\n              className=\"Closesvg\"\r\n            >\r\n              <Close width=\"30px\" height=\"30px\" />\r\n            </span> */}\r\n          </h2>\r\n\r\n          <div className=\"input-group\" style={{ marginBottom: \"1.8rem\" }}>\r\n            <input\r\n              type=\"text\"\r\n              {...register(\"fullname\", {\r\n                required: { value: true, message: \"Full name is required\" },\r\n                minLength: { value: 2, message: \"min value > 3\" },\r\n              })}\r\n            />\r\n            <span>Full Name *</span>\r\n          </div>\r\n          {errors.fullname && (\r\n            <span style={{ color: \"red\", marginTop: \"-20px\" }}>\r\n              {errors.fullname.message}\r\n            </span>\r\n          )}\r\n          <br />\r\n\r\n          <div className=\"input-group\" style={{ marginBottom: \"1.8rem\" }}>\r\n            <input\r\n              type=\"email\"\r\n              {...register(\"EmailAddress\", {\r\n                required: { value: true, message: \"Email is required\" },\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Enter Valid Email\",\r\n                },\r\n              })}\r\n            />\r\n            <span>Email</span>\r\n          </div>\r\n          {errors.EmailAddress && (\r\n            <span style={{ color: \"red\" }}>{errors.EmailAddress.message}</span>\r\n          )}\r\n          <br />\r\n\r\n          <div className=\"input-group\">\r\n            <Select\r\n              value={selectedOption}\r\n              onChange={handleChange}\r\n              options={countryListAlpha3}\r\n              isSearchable\r\n              placeholder=\"Select Country\"\r\n              autoFocus={false}\r\n              styles={customStyles}\r\n            />\r\n          </div>\r\n          {countryMsg ? (\r\n            <span style={{ color: \"red\" }}>Please select country</span>\r\n          ) : null}\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              {...register(\"city\", {\r\n                required: { value: true, message: \"Full name is required\" },\r\n              })}\r\n            />\r\n           {errors.city && (\r\n            <span style={{ color: \"red\" }}>{errors.city.message}</span>\r\n          )}\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn-primary\">\r\n            Get Started\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default Pop1;\r\n"]},"metadata":{},"sourceType":"module"}