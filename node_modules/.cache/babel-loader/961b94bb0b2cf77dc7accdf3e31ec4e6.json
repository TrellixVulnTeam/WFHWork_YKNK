{"ast":null,"code":"import * as types from \"./types\";\nimport { setCookiePolicy, setLocalStorageAccessToken, setAccessToken, removeAccessToken } from \"../../utilities/hooks/auth/util\";\nconst initState = {\n  loading: false,\n  success: false,\n  access_token: \"\",\n  access_token_state: false,\n  cookiePolicy: false,\n  otp_signup: \"\",\n  user: false,\n  verify_OTP: [],\n  opt_mesg: false,\n  login: false,\n  logout: false,\n  userData: \"\",\n  services: \"\",\n  gallery: \"\",\n  userUpdateRes: \"\",\n  businessUpdateres: \"\",\n  userGetMsg: \"\",\n  otp_state: false,\n  otp_stateReg: false,\n  signupUserData: \"\",\n  editProfile: \"\",\n  blogsArticleId: \"\",\n  register_complete: \"\",\n  businessData: \"\",\n  otp_stateLogin: false,\n  otp_stateSignup: false,\n  SelectedServices: [],\n  selected_services: \"\",\n  tradiaServiceLocation: [],\n  MessageServiceLocation: \"\",\n  imageUploadeRes: \"\",\n  submitApprovalRes: \"\"\n};\n\nconst AuthReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    // CHANGE_BLOGS_ARTICLE\n    case types.CHANGE_BLOGS_ARTICLE:\n      return { ...state,\n        blogsArticleId: payload\n      };\n    // PROVIDER_ASSIGN_POP3_SUCCESS\n\n    case types.PROVIDER_ASSIGN_POP3_SUCCESS:\n      /*       let providerLogin = false;\r\n      if (payload.message === \"Successfully loggedIn.\") {\r\n        providerLogin = true;\r\n      } */\n      return { ...state,\n        verify_OTP: { ...state.verify_OTP,\n          register_complete: payload.register_complete\n        },\n        businessUpdateres: payload //login: providerLogin,\n\n      };\n    // TEST_VERIFY_OTP_REQUEST\n\n    case types.TEST_VERIFY_OTP_REQUEST:\n      if (payload) {\n        setAccessToken(\"dummy_token\");\n      }\n\n      return { ...state,\n        user: payload\n      };\n    // COOKIE_POLICY\n\n    case types.COOKIE_POLICY:\n      if (payload) {\n        setCookiePolicy();\n      }\n\n      return { ...state,\n        cookiePolicy: payload\n      };\n    // GENERATE_ACCESS_TOKEN_REQUEST\n\n    case types.GENERATE_ACCESS_TOKEN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GENERATE_ACCESS_TOKEN_SUCCESS\n\n    case types.GENERATE_ACCESS_TOKEN_SUCCESS:\n      setLocalStorageAccessToken(payload);\n      return { ...state,\n        success: true,\n        loading: false,\n        access_token: payload.access_token,\n        access_token_state: true\n      };\n    // GENERATE_ACCESS_TOKEN_RESET\n\n    case types.GENERATE_ACCESS_TOKEN_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GENERATE_ACCESS_TOKEN_FAILURE\n\n    case types.GENERATE_ACCESS_TOKEN_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // UPDATE_ACCESS_TOKEN_REQUEST\n\n    case types.UPDATE_ACCESS_TOKEN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // UPDATE_ACCESS_TOKEN_SUCCESS\n\n    case types.UPDATE_ACCESS_TOKEN_SUCCESS:\n      setLocalStorageAccessToken(payload);\n      return { ...state,\n        success: true,\n        loading: false,\n        access_token: payload.access_token,\n        access_token_state: true\n      };\n    // UPDATE_ACCESS_TOKEN_RESET\n\n    case types.UPDATE_ACCESS_TOKEN_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // UPDATE_ACCESS_TOKEN_FAILURE\n\n    case types.UPDATE_ACCESS_TOKEN_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // GET_BUSINESSS_DETAILS_REQUEST\n\n    case types.GET_BUSINESSS_DETAILS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GET_BUSINESSS_DETAILS_SUCCESS\n\n    case types.GET_BUSINESSS_DETAILS_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        businessData: payload.business_data,\n        userData: payload.user_data,\n        workingRadius: payload.user_data.working_radius\n      };\n    // GET_BUSINESSS_DETAILS_RESET\n\n    case types.GET_BUSINESSS_DETAILS_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_BUSINESSS_DETAILS_FAILURE\n\n    case types.GET_BUSINESSS_DETAILS_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // BUSINESSS_DETAILS_UPDATE_REQUEST\n\n    case types.BUSINESSS_DETAILS_UPDATE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // BUSINESSS_DETAILS_UPDATE_SUCCESS\n\n    case types.BUSINESSS_DETAILS_UPDATE_SUCCESS:\n      // console.log(\"BUSINESSS_DETAILS_UPDATE_SUCCESS\", payload);\n      return { ...state,\n        success: true,\n        loading: false,\n        businessUpdateres: payload\n      };\n    // IMAGE_UPLOAD_SUCCESS\n\n    case types.IMAGE_UPLOAD_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        businessUpdateres: payload\n      };\n    // BUSINESSS_DETAILS_UPDATE_RESET\n\n    case types.BUSINESSS_DETAILS_UPDATE_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // BUSINESSS_DETAILS_UPDATE_FAILURE\n\n    case types.BUSINESSS_DETAILS_UPDATE_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // OPT_REGISTER_REQUEST\n\n    case types.OPT_REGISTER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // OPT_REGISTER_SUCCESS\n\n    case types.OPT_REGISTER_SUCCESS:\n      let otpStateReg = false;\n\n      if (payload === \"Already tradie exist\" || payload === \"Already user exist\") {\n        otpStateReg = false;\n        state.otp_stateSignup = true;\n      }\n\n      if (payload === \"OTP sent.\") {\n        otpStateReg = true;\n        state.otp_stateSignup = false;\n      }\n\n      return { ...state,\n        success: true,\n        loading: false,\n        otp: otpStateReg,\n        otp_stateReg: otpStateReg\n      };\n    // OPT_STATE_REG_CHANGE\n\n    case types.OPT_STATE_REG_CHANGE:\n      return { ...state,\n        otp_stateReg: payload,\n        otp_stateSignup: !payload\n      };\n    // OPT_REGISTER_RESET\n\n    case types.OPT_REGISTER_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // OPT_REGISTER_FAILURE\n\n    case types.OPT_REGISTER_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // VERIFY_OTP_REQUEST\n\n    case types.VERIFY_OTP_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // VERIFY_OTP_SUCCESS\n\n    case types.VERIFY_OTP_SUCCESS:\n      let loginState = false;\n\n      if (payload.message === \"Successfully loggedIn.\") {\n        loginState = true;\n        setAccessToken(\"dfgh456789dfghj\");\n      }\n\n      setLocalStorageAccessToken(payload);\n      return { ...state,\n        success: true,\n        loading: false,\n        verify_OTP: payload,\n        login: loginState,\n        otp: false\n      };\n    // VERIFY_OTP_RESET\n\n    case types.VERIFY_OTP_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // VERIFY_OTP_FAILURE\n\n    case types.VERIFY_OTP_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // OTP_LOGIN_REQUEST\n\n    case types.OTP_LOGIN_REQUEST:\n      return { ...state,\n        loading: true,\n        opt_mesg: false\n      };\n    // OTP_LOGIN_SUCCESS\n\n    case types.OTP_LOGIN_SUCCESS:\n      let otpState = false;\n\n      if (payload.message === \"You are not a registered user.\") {\n        otpState = false;\n        state.otp_stateLogin = true;\n      }\n\n      if (payload.message === \"OTP sent.\") {\n        otpState = true;\n        state.otp_stateLogin = false;\n      }\n\n      return { ...state,\n        success: true,\n        loading: false,\n        opt_mesg: otpState,\n        otp_state: otpState,\n        verify_OTP: payload\n      };\n    // OTP_LOGIN_FAILURE\n\n    case types.OTP_LOGIN_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // OPT_STATE_CHANGE\n\n    case types.OPT_STATE_CHANGE:\n      return { ...state,\n        loading: false,\n        otp_state: payload,\n        otp_stateLogin: !payload\n      };\n    // OTP_LOGIN_RESET\n\n    case types.OTP_LOGIN_RESET:\n      return { ...state,\n        success: false,\n        loading: false\n      };\n    // Update_Profile\n\n    case types.UPDATE_PROFILE_VERIFICATION_REQUEST:\n      return { ...state\n      };\n\n    case types.UPDATE_PROFILE_VERIFICATION_SUCCESS:\n      return { ...state,\n        userUpdateRes: payload // workingRadius: payload.working_radius,\n\n      };\n    // Update_Profile_FAILURE\n\n    case types.UPDATE_PROFILE_VERIFICATION_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // Update_Profile_RESET\n\n    case types.UPDATE_PROFILE_VERIFICATION_RESET:\n      return { ...state,\n        success: false,\n        loading: false\n      };\n    // SIGNUP_USER_ENTER_NAME_REQUEST\n\n    case types.SIGNUP_USER_ENTER_NAME_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case types.SIGNUP_USER_ENTER_NAME_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        signupUserData: payload\n      };\n    // SIGNUP_USER_ENTER_NAME_FAILURE\n\n    case types.SIGNUP_USER_ENTER_NAME_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // SIGNUP_USER_ENTER_NAME_RESET\n\n    case types.SIGNUP_USER_ENTER_NAME_RESET:\n      return { ...state,\n        success: false,\n        loading: false\n      };\n    // Update_Profile\n\n    case types.GET_PROFILE_INFORMATION_REQUEST:\n      return { ...state // loading: true,\n        // opt_mesg: false\n\n      };\n\n    case types.GET_PROFILE_INFORMATION_SUCCESS:\n      const {\n        user_data,\n        message,\n        services\n      } = payload;\n      return { ...state,\n        userData: user_data,\n        gallery: payload.gallery,\n        services: payload.services,\n        workingRadius: user_data.working_radius,\n        SelectedServices: services,\n        userGetMsg: message\n      };\n    // Update_Profile_FAILURE\n\n    case types.GET_PROFILE_INFORMATION_FAILURE:\n      return { ...state // loading: false\n\n      };\n    // Update_Profile_RESET\n\n    case types.GET_PROFILE_INFORMATION_RESET:\n      return { ...state // success: false,\n        // loading: false\n\n      };\n    // LOGOUT__REQUEST\n\n    case types.LOGOUT__REQUEST:\n      return { ...state\n      };\n    //LOGOUT__SUCCESS\n\n    case types.LOGOUT__SUCCESS:\n      if (payload === true) {\n        setLocalStorageAccessToken(\"\");\n        removeAccessToken();\n      }\n\n      return { ...state,\n        login: false,\n        verify_OTP: [] // logout: logoutState\n\n      };\n    // LOGOUT__FAILURE\n\n    case types.LOGOUT__FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // LOGOUT__RESET\n\n    case types.LOGOUT__RESET:\n      return { ...state,\n        success: false,\n        loading: false,\n        logout: false\n      };\n    // FACEBOOK_LOGIN_REQUEST\n\n    case types.FACEBOOK_LOGIN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // FACEBOOK_LOGIN_SUCCESS\n\n    case types.FACEBOOK_LOGIN_SUCCESS:\n      let fbLoginState = false;\n\n      if (payload.message === \"Successfully loggedIn.\") {\n        fbLoginState = true;\n        setAccessToken(\"dfgh456789dfghj\");\n      }\n\n      setLocalStorageAccessToken(payload);\n      return { ...state,\n        success: true,\n        loading: false,\n        verify_OTP: payload,\n        login: fbLoginState\n      };\n    // FACEBOOK_LOGIN_FAILURE\n\n    case types.FACEBOOK_LOGIN_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // FACEBOOK_LOGIN_RESET\n\n    case types.FACEBOOK_LOGIN_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_COUNTRY_LIST_REQUEST\n\n    case types.GET_COUNTRY_LIST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GET_COUNTRY_LIST_SUCCESS\n\n    case types.GET_COUNTRY_LIST_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false\n      };\n    // GET_COUNTRY_LIST_FAILURE\n\n    case types.GET_COUNTRY_LIST_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // GET_COUNTRY_LIST_RESET\n\n    case types.GET_COUNTRY_LIST_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // SIGNUP_USER_COMPLETION_REQUEST\n\n    case types.SIGNUP_USER_COMPLETION_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // SIGNUP_USER_COMPLETION_SUCCESS\n\n    case types.SIGNUP_USER_COMPLETION_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        editProfile: payload\n      };\n    // SIGNUP_USER_COMPLETION_RESET\n\n    case types.SIGNUP_USER_COMPLETION_RESET:\n      return { ...state,\n        loading: false,\n        editProfile: \"\"\n      };\n    // SIGNUP_USER_COMPLETION_FAILURE\n\n    case types.SIGNUP_USER_COMPLETION_FAILURE:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_SERVICE_LIST_REQUEST\n\n    case types.GET_SERVICE_LIST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GET_SERVICE_LIST_SUCCESS\n\n    case types.GET_SERVICE_LIST_SUCCESS:\n      const {\n        selected_services,\n        data\n      } = payload;\n      return { ...state,\n        success: true,\n        loading: false,\n        getServiceList: data,\n        selected_services: selected_services\n      };\n    // GET_SERVICE_LIST_RESET\n\n    case types.GET_SERVICE_LIST_RESET:\n      return { ...state,\n        loading: false\n      };\n    // GET_SERVICE_LIST_FAILURE\n\n    case types.GET_SERVICE_LIST_FAILURE:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_USER_ADDRESS_REQUEST\n\n    case types.GET_USER_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GET_USER_ADDRESS_SUCCESS\n\n    case types.GET_USER_ADDRESS_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        tradiaServiceLocation: payload\n      };\n    // GET_USER_ADDRESS_RESET\n\n    case types.GET_USER_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_USER_ADDRESS_FAILURE\n\n    case types.GET_USER_ADDRESS_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // GET_PROVIDER_ADDRESS_REQUEST\n\n    case types.GET_PROVIDER_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // GET_PROVIDER_ADDRESS_SUCCESS\n\n    case types.GET_PROVIDER_ADDRESS_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        businessUpdateres: payload\n      };\n    // GET_PROVIDER_ADDRESS_RESET\n\n    case types.GET_PROVIDER_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        success: false\n      };\n    // GET_PROVIDER_ADDRESS_FAILURE\n\n    case types.GET_PROVIDER_ADDRESS_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // PROFILE_PROVIDER_REGISTER_SUCCESS\n\n    case types.PROFILE_PROVIDER_REGISTER_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        verify_OTP: payload\n      };\n    // SUBMIT_FOR_APPROVAL_SUCCESS\n\n    case types.SUBMIT_FOR_APPROVAL_SUCCESS:\n      return { ...state,\n        success: true,\n        loading: false,\n        submitApprovalRes: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/redux/auth/reducers.js"],"names":["types","setCookiePolicy","setLocalStorageAccessToken","setAccessToken","removeAccessToken","initState","loading","success","access_token","access_token_state","cookiePolicy","otp_signup","user","verify_OTP","opt_mesg","login","logout","userData","services","gallery","userUpdateRes","businessUpdateres","userGetMsg","otp_state","otp_stateReg","signupUserData","editProfile","blogsArticleId","register_complete","businessData","otp_stateLogin","otp_stateSignup","SelectedServices","selected_services","tradiaServiceLocation","MessageServiceLocation","imageUploadeRes","submitApprovalRes","AuthReducer","state","action","payload","type","CHANGE_BLOGS_ARTICLE","PROVIDER_ASSIGN_POP3_SUCCESS","TEST_VERIFY_OTP_REQUEST","COOKIE_POLICY","GENERATE_ACCESS_TOKEN_REQUEST","GENERATE_ACCESS_TOKEN_SUCCESS","GENERATE_ACCESS_TOKEN_RESET","GENERATE_ACCESS_TOKEN_FAILURE","UPDATE_ACCESS_TOKEN_REQUEST","UPDATE_ACCESS_TOKEN_SUCCESS","UPDATE_ACCESS_TOKEN_RESET","UPDATE_ACCESS_TOKEN_FAILURE","GET_BUSINESSS_DETAILS_REQUEST","GET_BUSINESSS_DETAILS_SUCCESS","business_data","user_data","workingRadius","working_radius","GET_BUSINESSS_DETAILS_RESET","GET_BUSINESSS_DETAILS_FAILURE","BUSINESSS_DETAILS_UPDATE_REQUEST","BUSINESSS_DETAILS_UPDATE_SUCCESS","IMAGE_UPLOAD_SUCCESS","BUSINESSS_DETAILS_UPDATE_RESET","BUSINESSS_DETAILS_UPDATE_FAILURE","OPT_REGISTER_REQUEST","OPT_REGISTER_SUCCESS","otpStateReg","otp","OPT_STATE_REG_CHANGE","OPT_REGISTER_RESET","OPT_REGISTER_FAILURE","VERIFY_OTP_REQUEST","VERIFY_OTP_SUCCESS","loginState","message","VERIFY_OTP_RESET","VERIFY_OTP_FAILURE","OTP_LOGIN_REQUEST","OTP_LOGIN_SUCCESS","otpState","OTP_LOGIN_FAILURE","OPT_STATE_CHANGE","OTP_LOGIN_RESET","UPDATE_PROFILE_VERIFICATION_REQUEST","UPDATE_PROFILE_VERIFICATION_SUCCESS","UPDATE_PROFILE_VERIFICATION_FAILURE","UPDATE_PROFILE_VERIFICATION_RESET","SIGNUP_USER_ENTER_NAME_REQUEST","SIGNUP_USER_ENTER_NAME_SUCCESS","SIGNUP_USER_ENTER_NAME_FAILURE","SIGNUP_USER_ENTER_NAME_RESET","GET_PROFILE_INFORMATION_REQUEST","GET_PROFILE_INFORMATION_SUCCESS","GET_PROFILE_INFORMATION_FAILURE","GET_PROFILE_INFORMATION_RESET","LOGOUT__REQUEST","LOGOUT__SUCCESS","LOGOUT__FAILURE","LOGOUT__RESET","FACEBOOK_LOGIN_REQUEST","FACEBOOK_LOGIN_SUCCESS","fbLoginState","FACEBOOK_LOGIN_FAILURE","FACEBOOK_LOGIN_RESET","GET_COUNTRY_LIST_REQUEST","GET_COUNTRY_LIST_SUCCESS","GET_COUNTRY_LIST_FAILURE","GET_COUNTRY_LIST_RESET","SIGNUP_USER_COMPLETION_REQUEST","SIGNUP_USER_COMPLETION_SUCCESS","SIGNUP_USER_COMPLETION_RESET","SIGNUP_USER_COMPLETION_FAILURE","GET_SERVICE_LIST_REQUEST","GET_SERVICE_LIST_SUCCESS","data","getServiceList","GET_SERVICE_LIST_RESET","GET_SERVICE_LIST_FAILURE","GET_USER_ADDRESS_REQUEST","GET_USER_ADDRESS_SUCCESS","GET_USER_ADDRESS_RESET","GET_USER_ADDRESS_FAILURE","GET_PROVIDER_ADDRESS_REQUEST","GET_PROVIDER_ADDRESS_SUCCESS","GET_PROVIDER_ADDRESS_RESET","GET_PROVIDER_ADDRESS_FAILURE","PROFILE_PROVIDER_REGISTER_SUCCESS","SUBMIT_FOR_APPROVAL_SUCCESS"],"mappings":"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","sourcesContent":["import * as types from \"./types\";\r\nimport {\r\n  setCookiePolicy,\r\n  setLocalStorageAccessToken,\r\n  setAccessToken,\r\n  removeAccessToken,\r\n} from \"../../utilities/hooks/auth/util\";\r\n\r\nconst initState = {\r\n  loading: false,\r\n  success: false,\r\n  access_token: \"\",\r\n  access_token_state: false,\r\n  cookiePolicy: false,\r\n  otp_signup: \"\",\r\n  user: false,\r\n  verify_OTP: [],\r\n  opt_mesg: false,\r\n  login: false,\r\n  logout: false,\r\n  userData: \"\",\r\n  services: \"\",\r\n  gallery: \"\",\r\n  userUpdateRes: \"\",\r\n  businessUpdateres: \"\",\r\n  userGetMsg: \"\",\r\n  otp_state: false,\r\n  otp_stateReg: false,\r\n  signupUserData: \"\",\r\n  editProfile: \"\",\r\n  blogsArticleId: \"\",\r\n  register_complete: \"\",\r\n  businessData: \"\",\r\n  otp_stateLogin: false,\r\n  otp_stateSignup: false,\r\n  SelectedServices: [],\r\n  selected_services: \"\",\r\n  tradiaServiceLocation: [],\r\n  MessageServiceLocation: \"\",\r\n  imageUploadeRes: \"\",\r\n  submitApprovalRes: \"\",\r\n};\r\n\r\nconst AuthReducer = (state = initState, action) => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    // CHANGE_BLOGS_ARTICLE\r\n    case types.CHANGE_BLOGS_ARTICLE:\r\n      return {\r\n        ...state,\r\n        blogsArticleId: payload,\r\n      };\r\n    // PROVIDER_ASSIGN_POP3_SUCCESS\r\n    case types.PROVIDER_ASSIGN_POP3_SUCCESS:\r\n      /*       let providerLogin = false;\r\n      if (payload.message === \"Successfully loggedIn.\") {\r\n        providerLogin = true;\r\n      } */\r\n\r\n      return {\r\n        ...state,\r\n        verify_OTP: {\r\n          ...state.verify_OTP,\r\n          register_complete: payload.register_complete,\r\n        },\r\n        businessUpdateres: payload,\r\n        //login: providerLogin,\r\n      };\r\n    // TEST_VERIFY_OTP_REQUEST\r\n    case types.TEST_VERIFY_OTP_REQUEST:\r\n      if (payload) {\r\n        setAccessToken(\"dummy_token\");\r\n      }\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    // COOKIE_POLICY\r\n    case types.COOKIE_POLICY:\r\n      if (payload) {\r\n        setCookiePolicy();\r\n      }\r\n      return {\r\n        ...state,\r\n        cookiePolicy: payload,\r\n      };\r\n    // GENERATE_ACCESS_TOKEN_REQUEST\r\n    case types.GENERATE_ACCESS_TOKEN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GENERATE_ACCESS_TOKEN_SUCCESS\r\n    case types.GENERATE_ACCESS_TOKEN_SUCCESS:\r\n      setLocalStorageAccessToken(payload);\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        access_token: payload.access_token,\r\n        access_token_state: true,\r\n      };\r\n    // GENERATE_ACCESS_TOKEN_RESET\r\n    case types.GENERATE_ACCESS_TOKEN_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // GENERATE_ACCESS_TOKEN_FAILURE\r\n    case types.GENERATE_ACCESS_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n\r\n        loading: false,\r\n      };\r\n    // UPDATE_ACCESS_TOKEN_REQUEST\r\n    case types.UPDATE_ACCESS_TOKEN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // UPDATE_ACCESS_TOKEN_SUCCESS\r\n    case types.UPDATE_ACCESS_TOKEN_SUCCESS:\r\n      setLocalStorageAccessToken(payload);\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        access_token: payload.access_token,\r\n        access_token_state: true,\r\n      };\r\n    // UPDATE_ACCESS_TOKEN_RESET\r\n    case types.UPDATE_ACCESS_TOKEN_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // UPDATE_ACCESS_TOKEN_FAILURE\r\n    case types.UPDATE_ACCESS_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n\r\n        loading: false,\r\n      };\r\n    // GET_BUSINESSS_DETAILS_REQUEST\r\n    case types.GET_BUSINESSS_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GET_BUSINESSS_DETAILS_SUCCESS\r\n    case types.GET_BUSINESSS_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        businessData: payload.business_data,\r\n        userData: payload.user_data,\r\n        workingRadius: payload.user_data.working_radius,\r\n      };\r\n    // GET_BUSINESSS_DETAILS_RESET\r\n    case types.GET_BUSINESSS_DETAILS_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // GET_BUSINESSS_DETAILS_FAILURE\r\n    case types.GET_BUSINESSS_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // BUSINESSS_DETAILS_UPDATE_REQUEST\r\n    case types.BUSINESSS_DETAILS_UPDATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // BUSINESSS_DETAILS_UPDATE_SUCCESS\r\n    case types.BUSINESSS_DETAILS_UPDATE_SUCCESS:\r\n      // console.log(\"BUSINESSS_DETAILS_UPDATE_SUCCESS\", payload);\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        businessUpdateres: payload,\r\n      };\r\n    // IMAGE_UPLOAD_SUCCESS\r\n    case types.IMAGE_UPLOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        businessUpdateres: payload,\r\n      };\r\n    // BUSINESSS_DETAILS_UPDATE_RESET\r\n    case types.BUSINESSS_DETAILS_UPDATE_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // BUSINESSS_DETAILS_UPDATE_FAILURE\r\n    case types.BUSINESSS_DETAILS_UPDATE_FAILURE:\r\n      return {\r\n        ...state,\r\n\r\n        loading: false,\r\n      };\r\n    // OPT_REGISTER_REQUEST\r\n    case types.OPT_REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // OPT_REGISTER_SUCCESS\r\n    case types.OPT_REGISTER_SUCCESS:\r\n      let otpStateReg = false;\r\n      if (\r\n        payload === \"Already tradie exist\" ||\r\n        payload === \"Already user exist\"\r\n      ) {\r\n        otpStateReg = false;\r\n        state.otp_stateSignup = true;\r\n      }\r\n      if (payload === \"OTP sent.\") {\r\n        otpStateReg = true;\r\n        state.otp_stateSignup = false;\r\n      }\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        otp: otpStateReg,\r\n        otp_stateReg: otpStateReg,\r\n      };\r\n    // OPT_STATE_REG_CHANGE\r\n    case types.OPT_STATE_REG_CHANGE:\r\n      return {\r\n        ...state,\r\n        otp_stateReg: payload,\r\n        otp_stateSignup: !payload,\r\n      };\r\n\r\n    // OPT_REGISTER_RESET\r\n    case types.OPT_REGISTER_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // OPT_REGISTER_FAILURE\r\n    case types.OPT_REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n\r\n        loading: false,\r\n      };\r\n\r\n    // VERIFY_OTP_REQUEST\r\n    case types.VERIFY_OTP_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // VERIFY_OTP_SUCCESS\r\n    case types.VERIFY_OTP_SUCCESS:\r\n      let loginState = false;\r\n      if (payload.message === \"Successfully loggedIn.\") {\r\n        loginState = true;\r\n        setAccessToken(\"dfgh456789dfghj\");\r\n      }\r\n      setLocalStorageAccessToken(payload);\r\n\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        verify_OTP: payload,\r\n        login: loginState,\r\n        otp: false,\r\n      };\r\n\r\n    // VERIFY_OTP_RESET\r\n    case types.VERIFY_OTP_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // VERIFY_OTP_FAILURE\r\n    case types.VERIFY_OTP_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    // OTP_LOGIN_REQUEST\r\n    case types.OTP_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        opt_mesg: false,\r\n      };\r\n    // OTP_LOGIN_SUCCESS\r\n    case types.OTP_LOGIN_SUCCESS:\r\n      let otpState = false;\r\n      if (payload.message === \"You are not a registered user.\") {\r\n        otpState = false;\r\n        state.otp_stateLogin = true;\r\n      }\r\n      if (payload.message === \"OTP sent.\") {\r\n        otpState = true;\r\n        state.otp_stateLogin = false;\r\n      }\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        opt_mesg: otpState,\r\n        otp_state: otpState,\r\n        verify_OTP: payload,\r\n      };\r\n    // OTP_LOGIN_FAILURE\r\n    case types.OTP_LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // OPT_STATE_CHANGE\r\n    case types.OPT_STATE_CHANGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        otp_state: payload,\r\n        otp_stateLogin: !payload,\r\n      };\r\n    // OTP_LOGIN_RESET\r\n    case types.OTP_LOGIN_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n\r\n    // Update_Profile\r\n    case types.UPDATE_PROFILE_VERIFICATION_REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case types.UPDATE_PROFILE_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userUpdateRes: payload,\r\n        // workingRadius: payload.working_radius,\r\n      };\r\n    // Update_Profile_FAILURE\r\n    case types.UPDATE_PROFILE_VERIFICATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // Update_Profile_RESET\r\n    case types.UPDATE_PROFILE_VERIFICATION_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    // SIGNUP_USER_ENTER_NAME_REQUEST\r\n    case types.SIGNUP_USER_ENTER_NAME_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.SIGNUP_USER_ENTER_NAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        signupUserData: payload,\r\n      };\r\n    // SIGNUP_USER_ENTER_NAME_FAILURE\r\n    case types.SIGNUP_USER_ENTER_NAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // SIGNUP_USER_ENTER_NAME_RESET\r\n    case types.SIGNUP_USER_ENTER_NAME_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n\r\n    // Update_Profile\r\n    case types.GET_PROFILE_INFORMATION_REQUEST:\r\n      return {\r\n        ...state,\r\n        // loading: true,\r\n        // opt_mesg: false\r\n      };\r\n\r\n    case types.GET_PROFILE_INFORMATION_SUCCESS:\r\n      const { user_data, message, services } = payload;\r\n      return {\r\n        ...state,\r\n        userData: user_data,\r\n        gallery: payload.gallery,\r\n        services: payload.services,\r\n        workingRadius: user_data.working_radius,\r\n        SelectedServices: services,\r\n        userGetMsg: message,\r\n      };\r\n    // Update_Profile_FAILURE\r\n    case types.GET_PROFILE_INFORMATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        // loading: false\r\n      };\r\n    // Update_Profile_RESET\r\n    case types.GET_PROFILE_INFORMATION_RESET:\r\n      return {\r\n        ...state,\r\n        // success: false,\r\n        // loading: false\r\n      };\r\n\r\n    // LOGOUT__REQUEST\r\n    case types.LOGOUT__REQUEST:\r\n      return {\r\n        ...state,\r\n      };\r\n    //LOGOUT__SUCCESS\r\n    case types.LOGOUT__SUCCESS:\r\n      if (payload === true) {\r\n        setLocalStorageAccessToken(\"\");\r\n        removeAccessToken();\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        login: false,\r\n        verify_OTP: [],\r\n        // logout: logoutState\r\n      };\r\n    // LOGOUT__FAILURE\r\n    case types.LOGOUT__FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // LOGOUT__RESET\r\n    case types.LOGOUT__RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        loading: false,\r\n        logout: false,\r\n      };\r\n\r\n    // FACEBOOK_LOGIN_REQUEST\r\n    case types.FACEBOOK_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // FACEBOOK_LOGIN_SUCCESS\r\n    case types.FACEBOOK_LOGIN_SUCCESS:\r\n      let fbLoginState = false;\r\n      if (payload.message === \"Successfully loggedIn.\") {\r\n        fbLoginState = true;\r\n        setAccessToken(\"dfgh456789dfghj\");\r\n      }\r\n      setLocalStorageAccessToken(payload);\r\n\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        verify_OTP: payload,\r\n        login: fbLoginState,\r\n      };\r\n    // FACEBOOK_LOGIN_FAILURE\r\n    case types.FACEBOOK_LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // FACEBOOK_LOGIN_RESET\r\n    case types.FACEBOOK_LOGIN_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // GET_COUNTRY_LIST_REQUEST\r\n    case types.GET_COUNTRY_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GET_COUNTRY_LIST_SUCCESS\r\n    case types.GET_COUNTRY_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n      };\r\n    // GET_COUNTRY_LIST_FAILURE\r\n    case types.GET_COUNTRY_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // GET_COUNTRY_LIST_RESET\r\n    case types.GET_COUNTRY_LIST_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n\r\n    // SIGNUP_USER_COMPLETION_REQUEST\r\n    case types.SIGNUP_USER_COMPLETION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // SIGNUP_USER_COMPLETION_SUCCESS\r\n    case types.SIGNUP_USER_COMPLETION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        editProfile: payload,\r\n      };\r\n    // SIGNUP_USER_COMPLETION_RESET\r\n    case types.SIGNUP_USER_COMPLETION_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        editProfile: \"\",\r\n      };\r\n    // SIGNUP_USER_COMPLETION_FAILURE\r\n    case types.SIGNUP_USER_COMPLETION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n\r\n    // GET_SERVICE_LIST_REQUEST\r\n    case types.GET_SERVICE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GET_SERVICE_LIST_SUCCESS\r\n    case types.GET_SERVICE_LIST_SUCCESS:\r\n      const { selected_services, data } = payload;\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        getServiceList: data,\r\n        selected_services: selected_services,\r\n      };\r\n    // GET_SERVICE_LIST_RESET\r\n    case types.GET_SERVICE_LIST_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    // GET_SERVICE_LIST_FAILURE\r\n    case types.GET_SERVICE_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n\r\n    // GET_USER_ADDRESS_REQUEST\r\n    case types.GET_USER_ADDRESS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GET_USER_ADDRESS_SUCCESS\r\n    case types.GET_USER_ADDRESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        tradiaServiceLocation: payload,\r\n      };\r\n    // GET_USER_ADDRESS_RESET\r\n    case types.GET_USER_ADDRESS_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // GET_USER_ADDRESS_FAILURE\r\n    case types.GET_USER_ADDRESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    // GET_PROVIDER_ADDRESS_REQUEST\r\n    case types.GET_PROVIDER_ADDRESS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    // GET_PROVIDER_ADDRESS_SUCCESS\r\n    case types.GET_PROVIDER_ADDRESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        businessUpdateres: payload,\r\n      };\r\n    // GET_PROVIDER_ADDRESS_RESET\r\n    case types.GET_PROVIDER_ADDRESS_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n      };\r\n    // GET_PROVIDER_ADDRESS_FAILURE\r\n    case types.GET_PROVIDER_ADDRESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    // PROFILE_PROVIDER_REGISTER_SUCCESS\r\n    case types.PROFILE_PROVIDER_REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        verify_OTP: payload,\r\n      };\r\n    // SUBMIT_FOR_APPROVAL_SUCCESS\r\n    case types.SUBMIT_FOR_APPROVAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        submitApprovalRes: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}