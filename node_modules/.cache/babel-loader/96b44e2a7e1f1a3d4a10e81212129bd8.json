{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\src\\\\pages\\\\TradieServiceLocation\\\\AutoLocationComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/locationSvg.svg\";\nimport LocationIocn from \"../../assets/images/location-icon.svg\";\nimport tradie_service_location_2 from \"../../assets/icons/map-location.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from \"../../redux/auth/action\";\nimport Geolocation from \"react-geolocation\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\nlet addrees = \"\";\n\nconst AutoCompleteSearch = () => {\n  _s();\n\n  var _tradiaServiceLocatio;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    Get_User_Address_Action,\n    Get_Provider_Address_Action\n  } = Actions;\n  const {\n    tradiaServiceLocation,\n    businessUpdateres\n  } = useSelector(state => state.auth);\n  const [currentLocation, setCurrentLocation] = useState(false);\n  const [detectButton, setDetectButton] = useState();\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [fulladdress, SetFulladdress] = useState([]);\n  const [searchQuery, setSeacrhQuery] = useState(\"\");\n  const [searchFormData, setSearchFormData] = useState({\n    locationAdress: \"\",\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const {\n    locationAdress,\n    latitude,\n    longitude\n  } = searchFormData;\n\n  const handleChange = value => {\n    setSeacrhQuery(value);\n  };\n\n  const handleSelect = searchQuery => {\n    setSeacrhQuery(searchQuery);\n    geocodeByAddress(searchQuery).then(results => {\n      addrees = results[0].formatted_address;\n      return getLatLng(results[0]);\n    }).then(latLng => {\n      setSearchFormData({\n        latitude: latLng.lat,\n        longitude: latLng.lng,\n        locationAdress: addrees\n      });\n    }).catch(error => console.error(\"Error\", error));\n  };\n\n  useEffect(() => {\n    dispatch(Get_User_Address_Action());\n  }, []);\n  const splitAddress = locationAdress.split(\",\");\n\n  const submitServiceLocation = e => {\n    e.preventDefault();\n\n    if (fulladdress.length > 0) {\n      let a = fulladdress.length - 3;\n      let data = fulladdress[a];\n      const serviceData = {\n        address: data.formatted_address,\n        city: data.address_components[0].long_name,\n        country: data.address_components[2].long_name,\n        state: data.address_components[1].long_name,\n        latitude: lat,\n        location_name: \"home\",\n        longitude: lng,\n        online: 1,\n        role: \"provider\"\n      }; // console.log(\"fulladdress\",serviceData)\n\n      dispatch(Get_Provider_Address_Action(serviceData));\n      setTimeout(() => {\n        dispatch(Get_User_Address_Action());\n      }, 300);\n    } else if (splitAddress.length === 2) {\n      const serviceData = {\n        address: locationAdress,\n        city: splitAddress[splitAddress.length - 2],\n        country: splitAddress[splitAddress.length - 1],\n        state: splitAddress[splitAddress.length - 2],\n        latitude: latitude,\n        location_name: \"home\",\n        longitude: longitude,\n        online: 1,\n        role: \"provider\"\n      };\n      dispatch(Get_Provider_Address_Action(serviceData));\n      setTimeout(() => {\n        dispatch(Get_User_Address_Action());\n      }, 300);\n    } else {\n      const serviceData = {\n        address: locationAdress,\n        city: splitAddress[splitAddress.length - 3],\n        country: splitAddress[splitAddress.length - 1],\n        state: splitAddress[splitAddress.length - 2],\n        latitude: latitude,\n        location_name: \"home\",\n        longitude: longitude,\n        online: 1,\n        role: \"provider\"\n      };\n      dispatch(Get_Provider_Address_Action(serviceData));\n      setTimeout(() => {\n        dispatch(Get_User_Address_Action());\n      }, 300);\n    }\n  };\n\n  useEffect(() => {\n    if (businessUpdateres) {\n      toast.success(businessUpdateres, {\n        position: \"bottom-left\",\n        autoClose: 2000,\n        size: \"small\"\n      });\n      setTimeout(() => {\n        history.push(\"/tradie-my-profile\");\n      }, 2000);\n    }\n\n    dispatch({\n      type: \"BUSINESSS_DETAILS_UPDATE_SUCCESS\",\n      payloade: \"\"\n    });\n  }, [businessUpdateres]);\n\n  const calllatelong = async (latt, lngg) => {\n    // console.log(\"HELLO\" , latt,lngg)\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latt},${lngg}&key=AIzaSyDT6N5TjyH0MjDRAcYLGuiL1otostkeYhs`;\n    const res = await axios.get(url); // console.log(\"res\",res);\n\n    SetFulladdress(res.data.results);\n  };\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.getCurrentPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n        calllatelong(position.coords.latitude, position.coords.longitude);\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-search location-srch\",\n          children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: searchQuery,\n            onChange: handleChange,\n            onSelect: handleSelect,\n            children: _ref => {\n              let {\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                    placeholder: \"Type to search\",\n                    className: \"location-search-input\"\n                  }),\n                  className: \"input-additional-service additional-service-information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autocomplete-search-dropDown\",\n                  style: {\n                    marginTop: \"30px\"\n                  },\n                  children: suggestions.map((suggestion, idx) => {\n                    const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n                    const style = suggestion.active ? {\n                      backgroundColor: \"#ffffff\",\n                      cursor: \"pointer\"\n                    } : {\n                      backgroundColor: \"#ffffff\",\n                      cursor: \"pointer\"\n                    };\n                    return /*#__PURE__*/_createElement(\"div\", { ...getSuggestionItemProps(suggestion, {\n                        className,\n                        style\n                      }),\n                      key: idx,\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 25\n                      }\n                    }, /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        alignItems: \"center\"\n                      },\n                      className: \"svg-and-location-additional\",\n                      ...getSuggestionItemProps(suggestion, {\n                        className // style,\n\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(LocationIcon, {\n                        height: \"20px\",\n                        width: \"20px\",\n                        fill: \"grey\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"location-input-result\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"autocomplete-search-items-additional\" // onClick={handleSelectTerm}\n                          ,\n                          children: suggestion.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this));\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile-btn detect-location-btn\",\n          onClick: getLocation,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"location-icon \",\n            src: LocationIocn,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), \"Detect Current Location\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"m-b-1\",\n      children: \"Recent Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"  \",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"20\",\n          height: \"20\",\n          src: tradie_service_location_2,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), tradiaServiceLocation ? (_tradiaServiceLocatio = tradiaServiceLocation[0]) === null || _tradiaServiceLocatio === void 0 ? void 0 : _tradiaServiceLocatio.address : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group btn\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        onClick: e => {\n          submitServiceLocation(e);\n        },\n        value: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AutoCompleteSearch, \"fg+EORzQwE06Y7fjOfx1sE1aT98=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = AutoCompleteSearch;\nexport default AutoCompleteSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteSearch\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/pages/TradieServiceLocation/AutoLocationComplete.js"],"names":["React","useState","useEffect","PlacesAutocomplete","geocodeByAddress","getLatLng","axios","useHistory","useDispatch","useSelector","Actions","Geolocation","toast","configure","addrees","AutoCompleteSearch","history","dispatch","Get_User_Address_Action","Get_Provider_Address_Action","tradiaServiceLocation","businessUpdateres","state","auth","currentLocation","setCurrentLocation","detectButton","setDetectButton","lat","setLat","lng","setLng","status","setStatus","fulladdress","SetFulladdress","searchQuery","setSeacrhQuery","searchFormData","setSearchFormData","locationAdress","latitude","longitude","handleChange","value","handleSelect","then","results","formatted_address","latLng","catch","error","console","splitAddress","split","submitServiceLocation","e","preventDefault","length","a","data","serviceData","address","city","address_components","long_name","country","location_name","online","role","setTimeout","success","position","autoClose","size","push","type","payloade","calllatelong","latt","lngg","url","res","get","getLocation","navigator","geolocation","getCurrentPosition","coords","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","marginTop","map","suggestion","idx","active","style","backgroundColor","cursor","display","alignItems","description","LocationIocn","tradie_service_location_2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport axios from \"axios\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/icons/locationSvg.svg\";\r\nimport LocationIocn  from \"../../assets/images/location-icon.svg\";\r\nimport tradie_service_location_2 from \"../../assets/icons/map-location.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Actions from \"../../redux/auth/action\";\r\nimport Geolocation from \"react-geolocation\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nlet addrees = \"\";\r\nconst AutoCompleteSearch = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { Get_User_Address_Action, Get_Provider_Address_Action } = Actions;\r\n\r\n  const { tradiaServiceLocation, businessUpdateres } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const [currentLocation, setCurrentLocation] = useState(false);\r\n  const [detectButton, setDetectButton] = useState();\r\n  const [lat, setLat] = useState(null);\r\n    const [lng, setLng] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n\r\n  const [fulladdress,SetFulladdress] = useState([])\r\n  const [searchQuery, setSeacrhQuery] = useState(\"\");\r\n\r\n  const [searchFormData, setSearchFormData] = useState({\r\n    locationAdress: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  });\r\n\r\n  const { locationAdress, latitude, longitude } = searchFormData;\r\n\r\n  const handleChange = (value) => {\r\n    setSeacrhQuery(value);\r\n  };\r\n  const handleSelect = (searchQuery) => {\r\n    setSeacrhQuery(searchQuery);\r\n\r\n    geocodeByAddress(searchQuery)\r\n      .then((results) => {\r\n        addrees = results[0].formatted_address;\r\n\r\n        return getLatLng(results[0]);\r\n      })\r\n      .then((latLng) => {\r\n        setSearchFormData({\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n          locationAdress: addrees,\r\n        });\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(Get_User_Address_Action());\r\n  }, []);\r\n\r\n  const splitAddress = locationAdress.split(\",\");\r\n\r\n  const submitServiceLocation = (e) => {\r\n    e.preventDefault();\r\n    if(fulladdress.length>0) \r\n    {\r\n  \r\n    let a = fulladdress.length-3 ; \r\n      let data = fulladdress[a]\r\n    \r\n      const serviceData = {\r\n        address: data.formatted_address,\r\n        city: data.address_components[0].long_name,\r\n        country: data.address_components[2].long_name,\r\n        state: data.address_components[1].long_name,\r\n        latitude: lat,\r\n        location_name: \"home\",\r\n        longitude: lng,\r\n        online: 1,\r\n        role: \"provider\",\r\n        \r\n      }\r\n      // console.log(\"fulladdress\",serviceData)\r\n      dispatch(Get_Provider_Address_Action(serviceData));\r\n\r\n      setTimeout(() => {\r\n        dispatch(Get_User_Address_Action());\r\n      }, 300);\r\n      \r\n    }\r\n   else if (splitAddress.length === 2) {\r\n      const serviceData = {\r\n        address: locationAdress,\r\n        city: splitAddress[splitAddress.length - 2],\r\n        country: splitAddress[splitAddress.length - 1],\r\n        state: splitAddress[splitAddress.length - 2],\r\n        latitude: latitude,\r\n        location_name: \"home\",\r\n        longitude: longitude,\r\n        online: 1,\r\n        role: \"provider\",\r\n      };\r\n      dispatch(Get_Provider_Address_Action(serviceData));\r\n\r\n      setTimeout(() => {\r\n        dispatch(Get_User_Address_Action());\r\n      }, 300);\r\n    } else {\r\n      const serviceData = {\r\n        address: locationAdress,\r\n        city: splitAddress[splitAddress.length - 3],\r\n        country: splitAddress[splitAddress.length - 1],\r\n        state: splitAddress[splitAddress.length - 2],\r\n        latitude: latitude,\r\n        location_name: \"home\",\r\n        longitude: longitude,\r\n        online: 1,\r\n        role: \"provider\",\r\n      };\r\n      dispatch(Get_Provider_Address_Action(serviceData));\r\n      setTimeout(() => {\r\n        dispatch(Get_User_Address_Action());\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (businessUpdateres) {\r\n      toast.success(businessUpdateres, {\r\n        position: \"bottom-left\",\r\n        autoClose: 2000,\r\n        size: \"small\",\r\n      });\r\n      setTimeout(() => {\r\n        history.push(\"/tradie-my-profile\");\r\n      }, 2000);\r\n    }\r\n\r\n    dispatch({ type: \"BUSINESSS_DETAILS_UPDATE_SUCCESS\", payloade: \"\" });\r\n  }, [businessUpdateres]);\r\n\r\n  const calllatelong = async (latt,lngg)=>{\r\n    // console.log(\"HELLO\" , latt,lngg)\r\n    const url =\r\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latt},${lngg}&key=AIzaSyDT6N5TjyH0MjDRAcYLGuiL1otostkeYhs`\r\n          const res = await axios.get(url);\r\n          // console.log(\"res\",res);\r\n          SetFulladdress(res.data.results)\r\n        \r\n      }\r\n    \r\n    \r\n      const getLocation = () => {\r\n            if (!navigator.geolocation) {\r\n              setStatus('Geolocation is not supported by your browser');\r\n            } else {\r\n              setStatus('Locating...');\r\n              navigator.geolocation.getCurrentPosition((position) => {\r\n                setStatus(null);\r\n                setLat(position.coords.latitude);\r\n                setLng(position.coords.longitude);\r\n                calllatelong(position.coords.latitude,position.coords.longitude)\r\n               \r\n              }, () => {\r\n                setStatus('Unable to retrieve your location');\r\n              }); \r\n            \r\n            }\r\n            \r\n          }\r\n  return (\r\n    <>\r\n      <div className=\"input-group\">\r\n        <div className=\"\">\r\n          <div className=\"profile-search location-srch\">\r\n            <PlacesAutocomplete\r\n              value={searchQuery}\r\n              onChange={handleChange}\r\n              onSelect={handleSelect}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div>\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Type to search\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                    className=\"input-additional-service additional-service-information\"\r\n                  />\r\n                  <div\r\n                    className=\"autocomplete-search-dropDown\"\r\n                    style={{ marginTop: \"30px\" }}\r\n                  >\r\n                    {suggestions.map((suggestion, idx) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\r\n                        : {\r\n                            backgroundColor: \"#ffffff\",\r\n                            cursor: \"pointer\",\r\n                          };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className,\r\n                            style,\r\n                          })}\r\n                          key={idx}\r\n                        >\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                            className=\"svg-and-location-additional\"\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                              className,\r\n                              // style,\r\n                            })}\r\n                          >\r\n                            <LocationIcon\r\n                              height=\"20px\"\r\n                              width=\"20px\"\r\n                              fill=\"grey\"\r\n                            />\r\n                            <div className=\"location-input-result\">\r\n                              <p\r\n                                className=\"autocomplete-search-items-additional\"\r\n                                // onClick={handleSelectTerm}\r\n                              >\r\n                                {suggestion.description}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n          {/* <Geolocation\r\n            render={({ getCurrentPosition, fetchingPosition, position }) => (\r\n              <div>\r\n                <button className=\"profile-btn \" onClick={getCurrentPosition}>\r\n                  <span>Detect Current Location</span>\r\n                </button>\r\n              \r\n                <p>{position && position.coords.latitude}</p>\r\n                <p>{position && position.coords.longitude}</p>\r\n              </div>\r\n            )}\r\n          /> */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"profile-btn detect-location-btn\"\r\n            onClick={ getLocation}\r\n          >\r\n            <img\r\n            className=\"location-icon \"\r\n            src={LocationIocn}\r\n            alt=\"icon\"\r\n            />\r\n            Detect Current Location\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <label className=\"m-b-1\">Recent Location</label>\r\n      <div className=\"input-group mb-1\">\r\n        <label className=\"  \">\r\n          <img width=\"20\" height=\"20\" src={tradie_service_location_2} alt=\"\" />\r\n          {tradiaServiceLocation ? tradiaServiceLocation[0]?.address : \"\"}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"input-group btn\">\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn-primary\"\r\n          onClick={(e) => {\r\n            submitServiceLocation(e);\r\n          }}\r\n          value=\"Save\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AutoCompleteSearch;\r\n"]},"metadata":{},"sourceType":"module"}