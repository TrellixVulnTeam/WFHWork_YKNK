{"ast":null,"code":"import { toast, Flip } from \"react-toastify\";\nexport const errorNotification = error => {\n  var _error$response, _error$response$data;\n\n  if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n    var _error$response2;\n\n    toast.error((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  } else {\n    toast.error(error.message, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  }\n};\nexport const successNotification = function (response) {\n  var _response$data, _response$data$data;\n\n  let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Something went wrong\";\n  const msg = response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.message ? response.data.data.message : message;\n  toast.success(msg, {\n    position: \"top-right\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    transition: Flip,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n};","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/utilities/utils/index.js"],"names":["toast","Flip","errorNotification","error","response","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successNotification","msg","success","transition"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,gBAA5B;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,MAAIA,KAAJ,aAAIA,KAAJ,kCAAIA,KAAK,CAAEC,QAAX,oEAAI,gBAAiBC,IAArB,iDAAI,qBAAuBC,OAA3B,EAAoC;AAAA;;AAClCN,IAAAA,KAAK,CAACG,KAAN,qBAAYA,KAAK,CAACC,QAAlB,qDAAY,iBAAgBC,IAAhB,CAAqBC,OAAjC,EAA0C;AACxCC,MAAAA,QAAQ,EAAE,cAD8B;AAExCC,MAAAA,SAAS,EAAE,IAF6B;AAGxCC,MAAAA,eAAe,EAAE,KAHuB;AAIxCC,MAAAA,YAAY,EAAE,IAJ0B;AAKxCC,MAAAA,YAAY,EAAE,IAL0B;AAMxCC,MAAAA,SAAS,EAAE,IAN6B;AAOxCC,MAAAA,QAAQ,EAAEC;AAP8B,KAA1C;AASD,GAVD,MAUO;AACLd,IAAAA,KAAK,CAACG,KAAN,CAAYA,KAAK,CAACG,OAAlB,EAA2B;AACzBC,MAAAA,QAAQ,EAAE,cADe;AAEzBC,MAAAA,SAAS,EAAE,IAFc;AAGzBC,MAAAA,eAAe,EAAE,KAHQ;AAIzBC,MAAAA,YAAY,EAAE,IAJW;AAKzBC,MAAAA,YAAY,EAAE,IALW;AAMzBC,MAAAA,SAAS,EAAE,IANc;AAOzBC,MAAAA,QAAQ,EAAEC;AAPe,KAA3B;AASD;AACF,CAtBM;AAwBP,OAAO,MAAMC,mBAAmB,GAAG,UACjCX,QADiC,EAG9B;AAAA;;AAAA,MADHE,OACG,uEADO,sBACP;AACH,QAAMU,GAAG,GAAGZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,sBAAAA,QAAQ,CAAEC,IAAV,iFAAgBA,IAAhB,oEAAsBC,OAAtB,GACRF,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,OADX,GAERA,OAFJ;AAGAN,EAAAA,KAAK,CAACiB,OAAN,CAAcD,GAAd,EAAmB;AACjBT,IAAAA,QAAQ,EAAE,WADO;AAEjBC,IAAAA,SAAS,EAAE,IAFM;AAGjBC,IAAAA,eAAe,EAAE,IAHA;AAIjBC,IAAAA,YAAY,EAAE,IAJG;AAKjBQ,IAAAA,UAAU,EAAEjB,IALK;AAMjBU,IAAAA,YAAY,EAAE,IANG;AAOjBC,IAAAA,SAAS,EAAE,IAPM;AAQjBC,IAAAA,QAAQ,EAAEC;AARO,GAAnB;AAUD,CAjBM","sourcesContent":["import { toast, Flip } from \"react-toastify\";\r\nexport const errorNotification = (error) => {\r\n  if (error?.response?.data?.message) {\r\n    toast.error(error.response?.data.message, {\r\n      position: \"bottom-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.error(error.message, {\r\n      position: \"bottom-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\nexport const successNotification = (\r\n  response,\r\n  message = \"Something went wrong\"\r\n) => {\r\n  const msg = response?.data?.data?.message\r\n    ? response.data.data.message\r\n    : message;\r\n  toast.success(msg, {\r\n    position: \"top-right\",\r\n    autoClose: 2000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    transition: Flip,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}