{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\src\\\\pages\\\\TradieMyProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport * as Actions from \"../../redux/auth/action\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\"; // Handling Form with Formik\n\nimport { Formik, Form } from \"formik\"; // Handling Form Validation with yup\n\nimport * as Yup from \"yup\";\nimport tradie_my_profile_2 from \"../../assets/images/professional-tradie.jpg\";\nimport Navigation from \"../../components/Tradie Name/Index\";\nimport { countryListAlpha3 } from \"./CountryList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Swal from \"sweetalert2\";\nimport Section_top_1 from \"../../assets/icons/section-top-directory-before.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst Index = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    userData\n  } = useSelector(state => state.auth);\n  const {\n    userUpdateRes\n  } = useSelector(state => state.auth);\n  const {\n    full_name,\n    email,\n    mobile,\n    gender,\n    country,\n    city,\n    professional_experience,\n    website_link,\n    about_me,\n    country_code\n  } = userData;\n  const {\n    User_Profile_Update_Action,\n    Profile_steps_Action,\n    User_Profile_Get_Information_Action,\n    Get_Business_Details_Action,\n    Get_User_Address_Action\n  } = Actions;\n  const dispatch = useDispatch(); // const [Aboutme, setAboutme] = useState(\"\");\n  // const [EmailAddress, setEmailAddress] = useState(\"\");\n  // const [fullname, setfullname] = useState(\"\");\n  // const [Gender, setGender] = useState(\"\");\n  // const [PhoneNumber, setPhoneNumber] = useState(\"\");\n  // const [ProfessionalExperience, setProfessionalExperience] = useState(\"\");\n  // const [WebsiteLink, setWebsiteLink] = useState(\"\");\n  // const [City, setCity] = useState(\"\");\n\n  const [selectedCountry, setSelectOption] = useState(\"\");\n  useEffect(() => {\n    //   if (full_name) {\n    //     setfullname(full_name);\n    //   }\n    //   if (email) {\n    //     setEmailAddress(email);\n    //   }\n    //   if (mobile) {\n    //     setPhoneNumber(mobile);\n    //   }\n    //   if (gender) {\n    //     setGender(gender);\n    //   }\n    if (country) {\n      setSelectOption(country);\n    } //   if (city) {\n    //     setCity(city);\n    //   }\n    //   if (professional_experience) {\n    //     setProfessionalExperience(professional_experience);\n    //   }\n    //   if (website_link) {\n    //     setWebsiteLink(website_link);\n    //   }\n    //   if (about_me) {\n    //     setAboutme(about_me);\n    //   }\n\n  }, [userData]);\n  useEffect(() => {\n    if (userUpdateRes) {\n      toast.success(userUpdateRes, {\n        position: \"bottom-left\",\n        autoClose: 2000,\n        size: \"small\"\n      });\n      setTimeout(() => {\n        history.push(\"/business-details\");\n      }, 2000);\n    }\n\n    dispatch({\n      type: \"UPDATE_PROFILE_VERIFICATION_SUCCESS\",\n      payloade: \"\"\n    });\n  }, [userUpdateRes]);\n  useEffect(() => {\n    dispatch(User_Profile_Get_Information_Action());\n    dispatch(Get_Business_Details_Action());\n    dispatch(Profile_steps_Action());\n    dispatch(Get_User_Address_Action());\n  }, []);\n  const initialValues = {\n    fullname: full_name,\n    EmailAddress: email,\n    Gender: gender,\n    Aboutme: about_me,\n    PhoneNumber: mobile,\n    country_code: country_code,\n    ProfessionalExperience: professional_experience,\n    WebsiteLink: website_link,\n    City: city,\n    selectedCountry: country // pincode: pincode,\n\n  };\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required(\" required\"),\n    EmailAddress: Yup.string().required(\"required\").email(),\n    Gender: Yup.string().required(\"required\"),\n    Aboutme: Yup.string().required(\" required\"),\n    PhoneNumber: Yup.number().required(\" required\"),\n    ProfessionalExperience: Yup.string().required(\" required\"),\n    City: Yup.string().required(\"required\")\n  });\n\n  const handleSubmit = values => {\n    // e.preventDefault();\n    // const dataSend = {\n    //   Aboutme,\n    //   EmailAddress,\n    //   fullname,\n    //   Gender,\n    //   PhoneNumber,\n    //   ProfessionalExperience,\n    //   WebsiteLink,\n    //   City,\n    //   selectedCountry,\n    // };\n    const dataSend = Object.assign({}, values, {\n      selectedCountry: selectedCountry\n    });\n    dispatch(User_Profile_Update_Action(dataSend));\n  };\n\n  const handleChangeCountry = selectedOption => {\n    setSelectOption(selectedOption.label);\n  }; //cityFetch function\n\n\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      border: \"1px solid lightgray\",\n      \"&:hover\": {\n        borderColor: \"gray\"\n      } // border style on hover\n\n    }),\n    option: (provided, state) => ({ ...provided,\n      backgroundColor: state.isFocused ? \"#dddddd\" : \"#ffffff\",\n      color: state.isSelected ? \"black\" : \"black\"\n    })\n  };\n  const [errors, SetError] = useState(false);\n  const [enrrors, SetNameerror] = useState(false);\n  const [genders, Setgenders] = useState(false);\n  const [countrys, Setcountrys] = useState(false);\n  const [cityd, Setcityd] = useState(false);\n  const [web, Setweb] = useState(false);\n  const [aboutme, Setaboutme] = useState(false);\n  const [expre, Setexpre] = useState(false);\n  const [phone, Setphone] = useState(false);\n  useEffect(() => {\n    if (errors === true || enrrors === true || genders === true || cityd === true || web === true || aboutme === true || expre === true || phone === true) {\n      toast.error(\"Please Fill Each And Every Field\", {\n        position: \"bottom-left\",\n        autoClose: 3000,\n        size: \"small\"\n      });\n    }\n  }, [errors, enrrors, genders, cityd, web, aboutme, expre, phone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"directory-top-section section-top--tradie-my-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-top__before\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Section_top_1,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-top__title\",\n        children: [\"My \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section section--tradie-my-profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tradie-my-profile\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: \"true\",\n          initialValues: initialValues,\n          onSubmit: handleSubmit,\n          validationSchema: validationSchema,\n          children: formik => {\n            var _formik$values$fullna, _formik$values$fullna2;\n\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: \"tradie-my-profile__form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Identify verification & about me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"fullname\",\n                  type: \"text\",\n                  placeholder: \"Full Name\",\n                  onChange: formik.handleChange,\n                  value: ((_formik$values$fullna = formik.values.fullname) === null || _formik$values$fullna === void 0 ? void 0 : _formik$values$fullna.charAt(0).toUpperCase()) + ((_formik$values$fullna2 = formik.values.fullname) === null || _formik$values$fullna2 === void 0 ? void 0 : _formik$values$fullna2.slice(1)) // onChange={(e) => {\n                  //   setfullname(e.target.value);\n                  // }}\n                  ,\n                  id: \"inputError\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), formik.errors.fullname && formik.touched.fullname ? SetNameerror(true) : SetNameerror(false), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"Gender\",\n                  onChange: formik.handleChange,\n                  value: formik.values.Gender // onChange={(e) => {\n                  //   setGender(e.target.value);\n                  // }}\n                  ,\n                  className: \"tradie-my-profile__SelectInputs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: true,\n                    value: \"\",\n                    children: \"Select Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), formik.errors.Gender && formik.touched.Gender ? Setgenders(true) : Setgenders(false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"EmailAddress\",\n                  onChange: formik.handleChange,\n                  value: formik.values.EmailAddress // onChange={(e) => {\n                  //   setEmailAddress(e.target.value);\n                  // }}\n                  ,\n                  type: \"email\",\n                  placeholder: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), formik.errors.EmailAddress && formik.touched.EmailAddress ? SetError(true) : SetError(false), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"ProfessionalExperience\",\n                  onChange: formik.handleChange,\n                  value: formik.values.ProfessionalExperience // onChange={(e) => {\n                  //   setProfessionalExperience(e.target.value);\n                  // }}\n                  ,\n                  className: \"tradie-my-profile__SelectInputs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: true,\n                    value: \"\",\n                    children: \"Select Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1 Year\",\n                    children: \"1 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2 Year\",\n                    children: \"2 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3 Year\",\n                    children: \"3 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"4 Year\",\n                    children: \"4 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"5 Year\",\n                    children: \"5 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"6 Year\",\n                    children: \"6 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"7 Year\",\n                    children: \"7 Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), formik.errors.ProfessionalExperience && formik.touched.ProfessionalExperience ? Setexpre(true) : Setexpre(false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"country-section\",\n                  children: [/*#__PURE__*/_jsxDEV(Select, {\n                    options: countryListAlpha3,\n                    onChange: handleChangeCountry,\n                    value: countryListAlpha3.filter(function (option) {\n                      return option.label === selectedCountry;\n                    }),\n                    autoFocus: false,\n                    styles: customStyles\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"PhoneNumber\",\n                    type: \"number\",\n                    placeholder: \"Phone Number\",\n                    onChange: formik.handleChange,\n                    value: formik.values.PhoneNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 27\n                  }, this), formik.errors.PhoneNumber && formik.touched.PhoneNumber ? Setphone(true) : Setphone(false)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"City\",\n                  type: \"text\",\n                  placeholder: \"City\",\n                  onChange: formik.handleChange,\n                  value: formik.values.City // onChange={(e) => {\n                  //   setCity(e.target.value);\n                  // }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), formik.errors.City && formik.touched.City ? Setcityd(true) : Setcityd(false), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"WebsiteLink\",\n                  type: \"text\",\n                  placeholder: \"Website Link\",\n                  onChange: formik.handleChange,\n                  value: formik.values.WebsiteLink\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"Aboutme\",\n                  onChange: formik.handleChange,\n                  value: formik.values.Aboutme // onChange={(e) => {\n                  //   setAboutme(e.target.value);\n                  // }}\n                  ,\n                  placeholder: \"About me\",\n                  cols: \"30\",\n                  rows: \"10\",\n                  style: {\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), formik.errors.Aboutme && formik.touched.Aboutme ? Setaboutme(true) : Setaboutme(false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn-primary\",\n                  style: {\n                    cursor: \"pointer\",\n                    float: \"right\"\n                  } // onClick={(e) => {\n                  //   handleSubmit(e);\n                  // }}\n                  ,\n                  value: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section section--left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professional-tradie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"professional-tradie__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"professional-tradie__title\",\n            children: \"Are you a Professional Tradie?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you would like to be part of our Tradie community and are ready to meet new clients today please continue so we can welcome you onboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about-us\",\n            className: \"btn-primary\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"professional-tradie__image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tradie_my_profile_2,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"cKxcr+egrlaqVaQZL3NmgoTb6LI=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/pages/TradieMyProfile/index.js"],"names":["React","useState","useEffect","useMemo","Actions","Header","Footer","useForm","Link","useHistory","Formik","Form","Yup","tradie_my_profile_2","Navigation","countryListAlpha3","useDispatch","useSelector","Select","toast","Swal","configure","Index","history","userData","state","auth","userUpdateRes","full_name","email","mobile","gender","country","city","professional_experience","website_link","about_me","country_code","User_Profile_Update_Action","Profile_steps_Action","User_Profile_Get_Information_Action","Get_Business_Details_Action","Get_User_Address_Action","dispatch","selectedCountry","setSelectOption","success","position","autoClose","size","setTimeout","push","type","payloade","initialValues","fullname","EmailAddress","Gender","Aboutme","PhoneNumber","ProfessionalExperience","WebsiteLink","City","validationSchema","object","shape","string","required","number","handleSubmit","values","dataSend","Object","assign","handleChangeCountry","selectedOption","label","customStyles","control","base","border","borderColor","option","provided","backgroundColor","isFocused","color","isSelected","errors","SetError","enrrors","SetNameerror","genders","Setgenders","countrys","Setcountrys","cityd","Setcityd","web","Setweb","aboutme","Setaboutme","expre","Setexpre","phone","Setphone","error","Section_top_1","formik","handleChange","charAt","toUpperCase","slice","touched","filter","width","cursor","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport * as Actions from \"../../redux/auth/action\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// Handling Form with Formik\r\nimport { Formik, Form } from \"formik\";\r\n// Handling Form Validation with yup\r\nimport * as Yup from \"yup\";\r\nimport tradie_my_profile_2 from \"../../assets/images/professional-tradie.jpg\";\r\nimport Navigation from \"../../components/Tradie Name/Index\";\r\nimport { countryListAlpha3 } from \"./CountryList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport Section_top_1 from \"../../assets/icons/section-top-directory-before.svg\";\r\n\r\n\r\ntoast.configure();\r\n\r\nconst Index = () => {\r\n  const history = useHistory();\r\n  const { userData } = useSelector((state) => state.auth);\r\n  const { userUpdateRes } = useSelector((state) => state.auth);\r\n  const {\r\n    full_name,\r\n    email,\r\n    mobile,\r\n    gender,\r\n    country,\r\n    city,\r\n    professional_experience,\r\n    website_link,\r\n    about_me,\r\n    country_code,\r\n  } = userData;\r\n\r\n  const {\r\n    User_Profile_Update_Action,\r\n    Profile_steps_Action,\r\n    User_Profile_Get_Information_Action,\r\n    Get_Business_Details_Action,\r\n    Get_User_Address_Action,\r\n  } = Actions;\r\n  const dispatch = useDispatch();\r\n\r\n  // const [Aboutme, setAboutme] = useState(\"\");\r\n  // const [EmailAddress, setEmailAddress] = useState(\"\");\r\n  // const [fullname, setfullname] = useState(\"\");\r\n  // const [Gender, setGender] = useState(\"\");\r\n  // const [PhoneNumber, setPhoneNumber] = useState(\"\");\r\n  // const [ProfessionalExperience, setProfessionalExperience] = useState(\"\");\r\n  // const [WebsiteLink, setWebsiteLink] = useState(\"\");\r\n  // const [City, setCity] = useState(\"\");\r\n  const [selectedCountry, setSelectOption] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //   if (full_name) {\r\n    //     setfullname(full_name);\r\n    //   }\r\n    //   if (email) {\r\n    //     setEmailAddress(email);\r\n    //   }\r\n    //   if (mobile) {\r\n    //     setPhoneNumber(mobile);\r\n    //   }\r\n    //   if (gender) {\r\n    //     setGender(gender);\r\n    //   }\r\n    if (country) {\r\n      setSelectOption(country);\r\n    }\r\n    //   if (city) {\r\n    //     setCity(city);\r\n    //   }\r\n    //   if (professional_experience) {\r\n    //     setProfessionalExperience(professional_experience);\r\n    //   }\r\n    //   if (website_link) {\r\n    //     setWebsiteLink(website_link);\r\n    //   }\r\n    //   if (about_me) {\r\n    //     setAboutme(about_me);\r\n    //   }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if (userUpdateRes) {\r\n      toast.success(userUpdateRes, {\r\n        position: \"bottom-left\",\r\n        autoClose: 2000,\r\n        size: \"small\",\r\n      });\r\n      setTimeout(() => {\r\n        history.push(\"/business-details\");\r\n      }, 2000);\r\n    }\r\n\r\n    dispatch({ type: \"UPDATE_PROFILE_VERIFICATION_SUCCESS\", payloade: \"\" });\r\n  }, [userUpdateRes]);\r\n\r\n  useEffect(() => {\r\n    dispatch(User_Profile_Get_Information_Action());\r\n    dispatch(Get_Business_Details_Action());\r\n    dispatch(Profile_steps_Action());\r\n    dispatch(Get_User_Address_Action());\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    fullname: full_name,\r\n    EmailAddress: email,\r\n    Gender: gender,\r\n    Aboutme: about_me,\r\n    PhoneNumber: mobile,\r\n    country_code: country_code,\r\n    ProfessionalExperience: professional_experience,\r\n    WebsiteLink: website_link,\r\n    City: city,\r\n    selectedCountry: country,\r\n    // pincode: pincode,\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    fullname: Yup.string().required(\" required\"),\r\n    EmailAddress: Yup.string().required(\"required\").email(),\r\n    Gender: Yup.string().required(\"required\"),\r\n    Aboutme: Yup.string().required(\" required\"),\r\n    PhoneNumber: Yup.number().required(\" required\"),\r\n    ProfessionalExperience: Yup.string().required(\" required\"),\r\n    City: Yup.string().required(\"required\"),\r\n  });\r\n\r\n  const handleSubmit = (values) => {\r\n    // e.preventDefault();\r\n    // const dataSend = {\r\n    //   Aboutme,\r\n    //   EmailAddress,\r\n    //   fullname,\r\n    //   Gender,\r\n    //   PhoneNumber,\r\n    //   ProfessionalExperience,\r\n    //   WebsiteLink,\r\n    //   City,\r\n    //   selectedCountry,\r\n    // };\r\n\r\n    const dataSend = Object.assign({}, values, {\r\n      selectedCountry: selectedCountry,\r\n    });\r\n\r\n    dispatch(User_Profile_Update_Action(dataSend));\r\n  };\r\n\r\n  const handleChangeCountry = (selectedOption) => {\r\n    setSelectOption(selectedOption.label);\r\n  };\r\n\r\n  //cityFetch function\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n\r\n      border: \"1px solid lightgray\",\r\n      \"&:hover\": { borderColor: \"gray\" }, // border style on hover\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n\r\n      backgroundColor: state.isFocused ? \"#dddddd\" : \"#ffffff\",\r\n      color: state.isSelected ? \"black\" : \"black\",\r\n    }),\r\n  };\r\n\r\n  const [errors, SetError] = useState(false);\r\n  const [enrrors, SetNameerror] = useState(false);\r\n\r\n  const [genders, Setgenders] = useState(false);\r\n  const [countrys, Setcountrys] = useState(false);\r\n  const [cityd, Setcityd] = useState(false);\r\n  const [web, Setweb] = useState(false);\r\n  const [aboutme, Setaboutme] = useState(false);\r\n  const [expre, Setexpre] = useState(false);\r\n  const [phone, Setphone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      errors === true ||\r\n      enrrors === true ||\r\n      genders === true ||\r\n      cityd === true ||\r\n      web === true ||\r\n      aboutme === true ||\r\n      expre === true ||\r\n      phone === true\r\n    ) {\r\n      toast.error(\"Please Fill Each And Every Field\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 3000,\r\n        size: \"small\",\r\n      });\r\n    }\r\n  }, [errors, enrrors, genders, cityd, web, aboutme, expre, phone]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      {/* <!-- My Profile--> */}\r\n      <section className=\"directory-top-section section-top--tradie-my-profile\">\r\n      <div className=\"section-top__before\">\r\n          <img src={Section_top_1} alt=\"\" />\r\n        </div>\r\n        <h2 className=\"section-top__title\">\r\n         \r\n          My <span>Profile</span>\r\n        </h2>\r\n      </section>\r\n\r\n      <section className=\"section section--tradie-my-profile\">\r\n        <div className=\"tradie-my-profile\">\r\n          <Navigation />\r\n          <Formik\r\n            enableReinitialize=\"true\"\r\n            initialValues={initialValues}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <Form className=\"tradie-my-profile__form\">\r\n                  {/* <form className=\"tradie-my-profile__form\"> */}\r\n                  <h4>Identify verification & about me</h4>\r\n\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      name=\"fullname\"\r\n                      type=\"text\"\r\n                      placeholder=\"Full Name\"\r\n                      onChange={formik.handleChange}\r\n                      value={\r\n                        formik.values.fullname?.charAt(0).toUpperCase() +\r\n                        formik.values.fullname?.slice(1)\r\n                      }\r\n                      // onChange={(e) => {\r\n                      //   setfullname(e.target.value);\r\n                      // }}\r\n                      id=\"inputError\"\r\n                    />\r\n\r\n                    {formik.errors.fullname && formik.touched.fullname\r\n                      ? SetNameerror(true)\r\n                      : SetNameerror(false)}\r\n\r\n                    <select\r\n                      name=\"Gender\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.Gender}\r\n                      // onChange={(e) => {\r\n                      //   setGender(e.target.value);\r\n                      // }}\r\n                      className=\"tradie-my-profile__SelectInputs\"\r\n                    >\r\n                      <option selected={true} value=\"\">\r\n                        Select Gender\r\n                      </option>\r\n                      <option value=\"male\">Male</option>\r\n                      <option value=\"female\">Female</option>\r\n                      <option value=\"other\">Other</option>\r\n                    </select>\r\n                  </div>\r\n                  {formik.errors.Gender && formik.touched.Gender\r\n                    ? Setgenders(true)\r\n                    : Setgenders(false)}\r\n\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      name=\"EmailAddress\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.EmailAddress}\r\n                      // onChange={(e) => {\r\n                      //   setEmailAddress(e.target.value);\r\n                      // }}\r\n                      type=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                    />\r\n\r\n                    {formik.errors.EmailAddress && formik.touched.EmailAddress\r\n                      ? SetError(true)\r\n                      : SetError(false)}\r\n                    <select\r\n                      name=\"ProfessionalExperience\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.ProfessionalExperience}\r\n                      // onChange={(e) => {\r\n                      //   setProfessionalExperience(e.target.value);\r\n                      // }}\r\n                      className=\"tradie-my-profile__SelectInputs\"\r\n                    >\r\n                      <option selected={true} value=\"\">\r\n                        Select Experience\r\n                      </option>\r\n                      <option value=\"1 Year\">1 Year</option>\r\n                      <option value=\"2 Year\">2 Year</option>\r\n                      <option value=\"3 Year\">3 Year</option>\r\n                      <option value=\"4 Year\">4 Year</option>\r\n                      <option value=\"5 Year\">5 Year</option>\r\n                      <option value=\"6 Year\">6 Year</option>\r\n                      <option value=\"7 Year\">7 Year</option>\r\n                    </select>\r\n                  </div>\r\n                  {formik.errors.ProfessionalExperience &&\r\n                  formik.touched.ProfessionalExperience\r\n                    ? Setexpre(true)\r\n                    : Setexpre(false)}\r\n\r\n                  <div className=\"input-group\">\r\n                  <div className=\"country-section\">\r\n                        <Select\r\n                          options={countryListAlpha3}\r\n                          onChange={handleChangeCountry}\r\n                          value={countryListAlpha3.filter(function (option) {\r\n                            return option.label === selectedCountry;\r\n                          })}\r\n                          autoFocus={false}\r\n                          styles={customStyles}\r\n                        />\r\n                          <input\r\n                          name=\"PhoneNumber\"\r\n                          type=\"number\"\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.PhoneNumber}\r\n                        />\r\n                      {formik.errors.PhoneNumber && formik.touched.PhoneNumber\r\n                        ? Setphone(true)\r\n                        : Setphone(false)}\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                    <div className=\"\">\r\n                     \r\n                      {/* {formik.errors.ProfessionalExperience && formik.touched.ProfessionalExperience ? SetError(true): SetError(false) }  */}\r\n                      \r\n                        {/* <input\r\n                          type=\"text\"\r\n                          value={formik.values.country_code}\r\n                          onChange={formik.handleChange}\r\n                          style={{ width: \"70px\" }}\r\n                          placeholder=\"+91\"\r\n                        /> */}\r\n                      \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      name=\"City\"\r\n                      type=\"text\"\r\n                      placeholder=\"City\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.City}\r\n                      // onChange={(e) => {\r\n                      //   setCity(e.target.value);\r\n                      // }}\r\n                    />\r\n                    {formik.errors.City && formik.touched.City\r\n                      ? Setcityd(true)\r\n                      : Setcityd(false)}\r\n                    <input\r\n                      name=\"WebsiteLink\"\r\n                      type=\"text\"\r\n                      placeholder=\"Website Link\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.WebsiteLink}\r\n                    />\r\n                  </div>\r\n                  {/* <div className=\"input-group\">\r\n                    <input\r\n                      name=\"pincode\"\r\n                      type=\"text\"\r\n                      placeholder=\"Pin Code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.pincode}\r\n                    />\r\n                  </div> */}\r\n                  <div className=\"input-group\">\r\n                    <textarea\r\n                      name=\"Aboutme\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.Aboutme}\r\n                      // onChange={(e) => {\r\n                      //   setAboutme(e.target.value);\r\n                      // }}\r\n                      placeholder=\"About me\"\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  </div>\r\n                  {formik.errors.Aboutme && formik.touched.Aboutme\r\n                    ? Setaboutme(true)\r\n                    : Setaboutme(false)}\r\n\r\n                  <div className=\"input-group\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn-primary\"\r\n                      style={{ cursor: \"pointer\", float: \"right\" }}\r\n                      // onClick={(e) => {\r\n                      //   handleSubmit(e);\r\n                      // }}\r\n                      value=\"Save\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* </form> */}\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </section>\r\n\r\n      {/* <!-- Are you a Professional Tradie? --> */}\r\n      {/* {userData.access === \"provider\" ? (\r\n        \"\"\r\n      ) : ( */}\r\n      <section className=\"section section--left\">\r\n        <div className=\"professional-tradie\">\r\n          <div className=\"professional-tradie__description\">\r\n            <h3 className=\"professional-tradie__title\">\r\n              Are you a Professional Tradie?\r\n            </h3>\r\n            <p>\r\n              If you would like to be part of our Tradie community and are ready\r\n              to meet new clients today please continue so we can welcome you\r\n              onboard.\r\n            </p>\r\n            <Link to=\"/about-us\" className=\"btn-primary\">\r\n              Learn More\r\n            </Link>\r\n          </div>\r\n          <div className=\"professional-tradie__image\">\r\n            <img src={tradie_my_profile_2} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* )} */}\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}