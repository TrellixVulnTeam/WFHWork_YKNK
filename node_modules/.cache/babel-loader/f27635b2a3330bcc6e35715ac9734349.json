{"ast":null,"code":"import _objectSpread from\"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"F:\\\\New folder\\\\TapaTradieWebsite20-01-2022\\\\WFHWork\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import PlacesAutocomplete,{geocodeByAddress,getLatLng}from\"react-places-autocomplete\";import{ReactComponent as LocationIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/locationSvg.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var addrees=\"\";var AutoCompleteSearch=function AutoCompleteSearch(_ref){var state=_ref.state,setStateFunction=_ref.setStateFunction,addressValue=_ref.addressValue;var _useState=useState(addressValue?addressValue:\"\"),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSeacrhQuery=_useState2[1];var handleChange=function handleChange(value){setSeacrhQuery(value);};var handleSelect=function handleSelect(searchQuery){setSeacrhQuery(searchQuery);geocodeByAddress(searchQuery).then(function(results){addrees=results[0].formatted_address;return getLatLng(results[0]);}).then(function(latLng){setStateFunction(_objectSpread(_objectSpread({},state),{},{latitude:latLng.lat,longitude:latLng.lng,locationAdress:addrees}));}).catch(function(error){return console.error(\"Error\",error);});};return/*#__PURE__*/_jsx(\"div\",{className:\"section-top__autoCompleteSearch\",style:{zIndex:3},children:/*#__PURE__*/_jsx(PlacesAutocomplete,{value:searchQuery,onChange:handleChange,onSelect:handleSelect,children:function children(_ref2){var getInputProps=_ref2.getInputProps,suggestions=_ref2.suggestions,getSuggestionItemProps=_ref2.getSuggestionItemProps,loading=_ref2.loading;return/*#__PURE__*/_jsxs(\"div\",{children:[addressValue?/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},getInputProps({placeholder:\"Address\",className:\"location-search-input\"})),{},{className:\"section-top__autocomplete-search-input\"// defaultValue={addressValue ? addressValue : null}\n})):/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},getInputProps({placeholder:\"Address\",className:\"location-search-input\"})),{},{className:\"section-top__autocomplete-search-input\"})),/*#__PURE__*/_jsx(\"div\",{className:\"autocomplete-dropdown-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"section-top__autocomplete-search-dropDown\",children:suggestions.map(function(suggestion,idx){var className=suggestion.active?\"suggestion-item--active\":\"suggestion-item\";// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:\"#ffffff\",cursor:\"pointer\"}:{backgroundColor:\"#ffffff\",cursor:\"pointer\"};return/*#__PURE__*/_createElement(\"div\",_objectSpread(_objectSpread({},getSuggestionItemProps(suggestion,{className:className,style:style})),{},{key:idx}),/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({style:{display:\"flex\",alignItems:\"center\"},className:\"section-top__svg-and-location\"},getSuggestionItemProps(suggestion,{className:className// style,\n})),{},{children:[/*#__PURE__*/_jsx(LocationIcon,{height:\"7px\",width:\"7px\",fill:\"grey\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-top__autocomplete-search-items\"// onClick={(evt) => handleSelectTerm(suggestion.description)}\n,children:suggestion.description})]})));})})})]});}})});};export default AutoCompleteSearch;","map":{"version":3,"sources":["F:/New folder/TapaTradieWebsite20-01-2022/WFHWork/src/pages/Directory/AutoCompleteSearch.js"],"names":["React","useState","PlacesAutocomplete","geocodeByAddress","getLatLng","addrees","AutoCompleteSearch","state","setStateFunction","addressValue","searchQuery","setSeacrhQuery","handleChange","value","handleSelect","then","results","formatted_address","latLng","latitude","lat","longitude","lng","locationAdress","catch","error","console","zIndex","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","idx","active","style","backgroundColor","cursor","display","alignItems","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/icons/locationSvg.svg\";\r\n\r\nlet addrees = \"\";\r\nconst AutoCompleteSearch = ({ state, setStateFunction, addressValue }) => {\r\n  \r\n  const [searchQuery, setSeacrhQuery] = useState(addressValue? addressValue : \"\");\r\n\r\n  const handleChange = (value) => {\r\n    setSeacrhQuery(value);\r\n  };\r\n  const handleSelect = (searchQuery) => {\r\n    setSeacrhQuery(searchQuery);\r\n\r\n    geocodeByAddress(searchQuery)\r\n      .then((results) => {\r\n        addrees = results[0].formatted_address;\r\n\r\n        return getLatLng(results[0]);\r\n      })\r\n      .then((latLng) => {\r\n        setStateFunction({\r\n          ...state,\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n          locationAdress: addrees,\r\n        });\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"section-top__autoCompleteSearch\" style={{ zIndex: 3 }}>\r\n      <PlacesAutocomplete\r\n        value={searchQuery}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n\r\n            {/* <input\r\n              {...getInputProps({\r\n                placeholder: \"Address\",\r\n                className: \"location-search-input\",\r\n              })}\r\n              className=\"section-top__autocomplete-search-input\"\r\n            //   value={addressValue ? addressValue : null}\r\n            /> */}\r\n\r\n            {addressValue ? (\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: \"Address\",\r\n                  className: \"location-search-input\",\r\n                })}\r\n                className=\"section-top__autocomplete-search-input\"\r\n\r\n                // defaultValue={addressValue ? addressValue : null}\r\n\r\n              />\r\n            ) : (\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: \"Address\",\r\n                  className: \"location-search-input\",\r\n                })}\r\n                className=\"section-top__autocomplete-search-input\"\r\n              />\r\n            )}\r\n\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              <div className=\"section-top__autocomplete-search-dropDown\">\r\n                {suggestions.map((suggestion, idx) => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\r\n                    : {\r\n                        backgroundColor: \"#ffffff\",\r\n                        cursor: \"pointer\",\r\n                      };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                      key={idx}\r\n                    >\r\n                      <div\r\n                        style={{ display: \"flex\", alignItems: \"center\" }}\r\n                        className=\"section-top__svg-and-location\"\r\n                        {...getSuggestionItemProps(suggestion, {\r\n                          className,\r\n                          // style,\r\n                        })}\r\n                      >\r\n                        <LocationIcon height=\"7px\" width=\"7px\" fill=\"grey\" />\r\n                        <p\r\n                          className=\"section-top__autocomplete-search-items\"\r\n                          // onClick={(evt) => handleSelectTerm(suggestion.description)}\r\n                        >\r\n                          {suggestion.description}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\nexport default AutoCompleteSearch;\r\n"]},"metadata":{},"sourceType":"module"}